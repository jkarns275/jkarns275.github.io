{"version":3,"file":"color.js","sources":["../src/multiply-matrices.js","../src/util.js","../src/hooks.js","../src/defaults.js","../src/adapt.js","../src/space.js","../src/parse.js","../src/getColor.js","../src/getAll.js","../src/get.js","../src/setAll.js","../src/set.js","../src/spaces/xyz-d65.js","../src/spaces/xyz-d50.js","../src/spaces/lab.js","../src/angles.js","../src/spaces/lch.js","../src/deltaE/deltaE2000.js","../src/inGamut.js","../src/clone.js","../src/toGamut.js","../src/to.js","../src/serialize.js","../src/distance.js","../src/equals.js","../src/contrast.js","../src/luminance.js","../src/chromaticity.js","../src/deltaE.js","../src/deltaE/deltaE76.js","../src/deltaE/deltaECMC.js","../src/spaces/xyz-abs-d65.js","../src/spaces/jzazbz.js","../src/spaces/jzczhz.js","../src/deltaE/deltaEJz.js","../src/spaces/ictcp.js","../src/deltaE/deltaEITP.js","../src/spaces/oklab.js","../src/deltaE/deltaEOK.js","../src/variations.js","../src/interpolation.js","../src/rgbspace.js","../src/spaces/srgb-linear.js","../src/keywords.js","../src/spaces/srgb.js","../src/color.js","../src/spaces/hsl.js","../src/spaces/hsv.js","../src/spaces/hwb.js","../src/spaces/p3-linear.js","../src/spaces/p3.js","../src/spaces/a98rgb-linear.js","../src/spaces/a98rgb.js","../src/spaces/prophoto-linear.js","../src/spaces/prophoto.js","../src/spaces/rec2020-linear.js","../src/spaces/rec2020.js","../src/spaces/oklch.js","../src/spaces/rec2100-pq.js","../src/spaces/rec2100-hlg.js","../src/CATs.js","../src/spaces/acescg.js","../src/spaces/acescc.js","../src/space-accessors.js","../src/index.js"],"sourcesContent":["// A is m x n. B is n x p. product is m x p.\nexport default function multiplyMatrices(A, B) {\n\tlet m = A.length;\n\n\tif (!Array.isArray(A[0])) {\n\t\t// A is vector, convert to [[a, b, c, ...]]\n\t\tA = [A];\n\t}\n\n\tif (!Array.isArray(B[0])) {\n\t\t// B is vector, convert to [[a], [b], [c], ...]]\n\t\tB = B.map(x => [x]);\n\t}\n\n\tlet p = B[0].length;\n\tlet B_cols = B[0].map((_, i) => B.map(x => x[i])); // transpose B\n\tlet product = A.map(row => B_cols.map(col => {\n\t\tlet ret = 0;\n\n\t\tif (!Array.isArray(row)) {\n\t\t\tfor (let c of col) {\n\t\t\t\tret += row * c;\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tfor (let i=0; i < row.length; i++) {\n\t\t\tret += row[i] * (col[i] || 0);\n\t\t}\n\n\t\treturn ret;\n\t}));\n\n\tif (m === 1) {\n\t\tproduct = product[0]; // Avoid [[a, b, c, ...]]\n\t}\n\n\tif (p === 1) {\n\t\treturn product.map(x => x[0]); // Avoid [[a], [b], [c], ...]]\n\t}\n\n\treturn product;\n}\n","/**\n * Various utility functions\n */\n\nexport {default as multiplyMatrices} from \"./multiply-matrices.js\";\n\n/**\n * Check if a value is a string (including a String object)\n * @param {*} str - Value to check\n * @returns {boolean}\n */\nexport function isString (str) {\n\treturn type(str) === \"string\";\n}\n\n/**\n * Determine the internal JavaScript [[Class]] of an object.\n * @param {*} o - Value to check\n * @returns {string}\n */\nexport function type (o) {\n\tlet str = Object.prototype.toString.call(o);\n\n\treturn (str.match(/^\\[object\\s+(.*?)\\]$/)[1] || \"\").toLowerCase();\n}\n\n/**\n * Round a number to a certain number of significant digits\n * @param {number} n - The number to round\n * @param {number} precision - Number of significant digits\n */\nexport function toPrecision(n, precision) {\n\tn = +n;\n\tprecision = +precision;\n\tlet integerLength = (Math.floor(n) + \"\").length;\n\n\tif (precision > integerLength) {\n\t\treturn +n.toFixed(precision - integerLength);\n\t}\n\telse {\n\t\tlet p10 = 10 ** (integerLength - precision);\n\t\treturn Math.round(n / p10) * p10;\n\t}\n}\n\n/**\n* Parse a CSS function, regardless of its name and arguments\n* @param String str String to parse\n* @return {{name, args, rawArgs}}\n*/\nexport function parseFunction (str) {\n\tif (!str) {\n\t\treturn;\n\t}\n\n\tstr = str.trim();\n\n\tconst isFunctionRegex = /^([a-z]+)\\((.+?)\\)$/i;\n\tconst isNumberRegex = /^-?[\\d.]+$/;\n\tlet parts = str.match(isFunctionRegex);\n\n\tif (parts) {\n\t\t// It is a function, parse args\n\t\tlet args = [];\n\t\tparts[2].replace(/\\/?\\s*([-\\w.]+(?:%|deg)?)/g, ($0, arg) => {\n\t\t\tif (/%$/.test(arg)) {\n\t\t\t\t// Convert percentages to 0-1 numbers\n\t\t\t\targ = new Number(arg.slice(0, -1) / 100);\n\t\t\t\targ.type = \"<percentage>\";\n\t\t\t}\n\t\t\telse if (/deg$/.test(arg)) {\n\t\t\t\t// Drop deg from degrees and convert to number\n\t\t\t\t// TODO handle other units too\n\t\t\t\targ = new Number(+arg.slice(0, -3));\n\t\t\t\targ.type = \"<angle>\";\n\t\t\t\targ.unit = \"deg\";\n\t\t\t}\n\t\t\telse if (isNumberRegex.test(arg)) {\n\t\t\t\t// Convert numerical args to numbers\n\t\t\t\targ = new Number(arg);\n\t\t\t\targ.type = \"<number>\";\n\t\t\t}\n\n\t\t\tif ($0.startsWith(\"/\")) {\n\t\t\t\t// It's alpha\n\t\t\t\targ = arg instanceof Number? arg : new Number(arg);\n\t\t\t\targ.alpha = true;\n\t\t\t}\n\n\t\t\targs.push(arg);\n\t\t});\n\n\t\treturn {\n\t\t\tname: parts[1].toLowerCase(),\n\t\t\trawName: parts[1],\n\t\t\trawArgs: parts[2],\n\t\t\t// An argument could be (as of css-color-4):\n\t\t\t// a number, percentage, degrees (hue), ident (in color())\n\t\t\targs\n\t\t};\n\t}\n}\n\nexport function last(arr) {\n\treturn arr[arr.length - 1];\n}\n\nexport function interpolate (start, end, p) {\n\tif (isNaN(start)) {\n\t\treturn end;\n\t}\n\n\tif (isNaN(end)) {\n\t\treturn start;\n\t}\n\n\treturn start + (end - start) * p;\n}\n\nexport function interpolateInv (start, end, value) {\n\treturn (value - start) / (end - start);\n}\n\nexport function mapRange(from, to, value) {\n\treturn interpolate(to[0], to[1], interpolateInv(from[0], from[1], value));\n}\n\nexport function parseCoordGrammar (coordGrammars) {\n\treturn coordGrammars.map(coordGrammar => {\n\t\treturn coordGrammar.split(\"|\").map(type => {\n\t\t\ttype = type.trim();\n\t\t\tlet range = type.match(/^(<[a-z]+>)\\[(-?[.\\d]+),\\s*(-?[.\\d]+)\\]?$/);\n\n\t\t\tif (range) {\n\t\t\t\tlet ret = new String(range[1]);\n\t\t\t\tret.range = [+range[2], +range[3]];\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn type;\n\t\t});\n\t});\n}","/**\n * A class for adding deep extensibility to any piece of JS code\n */\nexport class Hooks {\n\tadd (name, callback, first) {\n\t\tif (typeof arguments[0] != \"string\") {\n\t\t\t// Multiple hooks\n\t\t\tfor (var name in arguments[0]) {\n\t\t\t\tthis.add(name, arguments[0][name], arguments[1]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t(Array.isArray(name)? name : [name]).forEach(function(name) {\n\t\t\tthis[name] = this[name] || [];\n\n\t\t\tif (callback) {\n\t\t\t\tthis[name][first? \"unshift\" : \"push\"](callback);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\trun (name, env) {\n\t\tthis[name] = this[name] || [];\n\t\tthis[name].forEach(function(callback) {\n\t\t\tcallback.call(env && env.context? env.context : env, env);\n\t\t});\n\t}\n};\n\n/**\n * The instance of {@link Hooks} used throughout Color.js\n */\nconst hooks = new Hooks();\n\nexport default hooks;","// Global defaults one may want to configure\nconst hasDOM = typeof document !== \"undefined\";\n\nexport default {\n\tgamut_mapping: \"lch.c\",\n\tprecision: 5,\n\tdeltaE: \"76\", // Default deltaE method\n\tcss_space: \"srgb\", // Default space for CSS output. Code in Color.js makes this wider if there's a DOM available\n}","import hooks from \"./hooks.js\";\nimport {multiplyMatrices} from \"./util.js\"\n\nexport const WHITES = {\n\t// for compatibility, the four-digit chromaticity-derived ones everyone else uses\n\tD50: [0.3457 / 0.3585, 1.00000, (1.0 - 0.3457 - 0.3585) / 0.3585],\n\tD65: [0.3127 / 0.3290, 1.00000, (1.0 - 0.3127 - 0.3290) / 0.3290],\n}\n\nexport function getWhite(name) {\n\tif (Array.isArray(name)) {\n\t\treturn name;\n\t}\n\n\treturn WHITES[name];\n}\n\n// Adapt XYZ from white point W1 to W2\nexport default function adapt (W1, W2, XYZ, options = {}) {\n\tW1 = getWhite(W1);\n\tW2 = getWhite(W2);\n\n\tif (!W1 || !W2) {\n\t\tthrow new TypeError(`Missing white point to convert ${!W1? \"from\" : \"\"}${!W1&&!W2? \"/\" : \"\"}${!W2? \"to\" : \"\"}`);\n\t}\n\n\tif (W1 === W2) {\n\t\t// Same whitepoints, no conversion needed\n\t\treturn XYZ;\n\t}\n\n\tlet env = {W1, W2, XYZ, options};\n\n\thooks.run(\"chromatic-adaptation-start\", env);\n\n\tif (!env.M) {\n\t\tif (env.W1 === WHITES.D65 && env.W2 === WHITES.D50) {\n\t\t\tenv.M = [\n\t\t\t\t[  1.0479298208405488,    0.022946793341019088,  -0.05019222954313557 ],\n\t\t\t\t[  0.029627815688159344,  0.990434484573249,     -0.01707382502938514 ],\n\t\t\t\t[ -0.009243058152591178,  0.015055144896577895,   0.7518742899580008  ]\n\t\t\t];\n\t\t}\n\t\telse if (env.W1 === WHITES.D50 && env.W2 === WHITES.D65) {\n\n\t\t\tenv.M = [\n\t\t\t\t[  0.9554734527042182,   -0.023098536874261423,  0.0632593086610217   ],\n\t\t\t\t[ -0.028369706963208136,  1.0099954580058226,    0.021041398966943008 ],\n\t\t\t\t[  0.012314001688319899, -0.020507696433477912,  1.3303659366080753   ]\n\t\t\t];\n\t\t}\n\t}\n\n\thooks.run(\"chromatic-adaptation-end\", env);\n\n\tif (env.M) {\n\t\treturn multiplyMatrices(env.M, env.XYZ);\n\t}\n\telse {\n\t\tthrow new TypeError(\"Only Bradford CAT with white points D50 and D65 supported for now.\");\n\t}\n}\n","import {type, parseCoordGrammar, toPrecision, mapRange} from \"./util.js\";\nimport {getWhite} from \"./adapt.js\";\nimport hooks from \"./hooks.js\";\n\nconst Îµ = .000075;\n\n/**\n * Class to represent a color space\n */\nexport default class ColorSpace {\n\tconstructor (options) {\n\t\tthis.id = options.id;\n\t\tthis.name = options.name;\n\t\tthis.base = options.base ? ColorSpace.get(options.base) : null;\n\n\t\tif (this.base) {\n\t\t\tthis.fromBase = options.fromBase;\n\t\t\tthis.toBase = options.toBase;\n\t\t}\n\n\t\t// Coordinate metadata\n\n\t\tlet coords = options.coords ?? this.base.coords;\n\t\tthis.coords = coords;\n\n\t\t// White point\n\n\t\tlet white = options.white ?? this.base.white ?? \"D65\";\n\t\tthis.white = getWhite(white);\n\n\t\t// Sort out formats\n\n\t\tthis.formats = options.formats ?? {};\n\t\tfor (let type in this.formats) {\n\t\t\tfor (let name in this.formats[type]) {\n\t\t\t\tlet format = this.formats[type][name];\n\t\t\t\tformat.type ??= type;\n\n\t\t\t\tif (type === \"functions\") {\n\t\t\t\t\tformat.name ??= name;\n\t\t\t\t}\n\n\t\t\t\tif (format.coords) {\n\t\t\t\t\tformat.coordGrammar = parseCoordGrammar(format.coords);\n\n\t\t\t\t\tlet coordFormats = Object.entries(this.coords).map(([id, coordMeta], i) => {\n\t\t\t\t\t\t// Preferred format for each coord is the first one\n\t\t\t\t\t\tlet outputType = format.coordGrammar[i][0];\n\n\t\t\t\t\t\tlet fromRange = coordMeta.range || coordMeta.refRange;\n\t\t\t\t\t\tlet toRange = outputType.range, suffix = \"\";\n\n\t\t\t\t\t\t// Non-strict equals intentional since outputType could be a string object\n\t\t\t\t\t\tif (outputType == \"<percentage>\") {\n\t\t\t\t\t\t\ttoRange = [0, 100];\n\t\t\t\t\t\t\tsuffix = \"%\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (outputType == \"<angle>\") {\n\t\t\t\t\t\t\tsuffix = \"deg\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn  {fromRange, toRange, suffix};\n\t\t\t\t\t});\n\n\t\t\t\t\tformat.serializeCoords = (coords, precision) => {\n\t\t\t\t\t\treturn coords.map((c, i) => {\n\t\t\t\t\t\t\tlet {fromRange, toRange, suffix} = coordFormats[i];\n\n\t\t\t\t\t\t\tif (fromRange && toRange) {\n\t\t\t\t\t\t\t\tc = mapRange(fromRange, toRange, c);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc = toPrecision(c, precision);\n\n\t\t\t\t\t\t\tif (suffix) {\n\t\t\t\t\t\t\t\tc += suffix;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.cssId && !this.formats.functions?.color) {\n\t\t\tthis.formats.functions ??= {};\n\t\t\tthis.formats.functions.color = { id: options.cssId };\n\t\t\tObject.defineProperty(this, \"cssId\", {value: options.cssId});\n\t\t}\n\t\telse if (this.formats.functions?.color && !this.formats.functions?.color.id) {\n\t\t\tthis.formats.functions.color.id = this.id;\n\t\t}\n\n\t\t// Other stuff\n\t\tthis.referred = options.referred;\n\n\t\t// Compute ancestors and store them, since they will never change\n\t\tthis.#path = this.#getPath().reverse();\n\n\t\thooks.run(\"colorspace-init-end\", this);\n\t}\n\n\tinGamut (coords, {epsilon = Îµ} = {}) {\n\t\tif (this.isPolar) {\n\t\t\t// Do not check gamut through polar coordinates\n\t\t\tcoords = this.toBase(coords);\n\n\t\t\treturn this.base.inGamut(coords, {epsilon});\n\t\t}\n\n\t\tlet coordMeta = Object.values(this.coords);\n\n\t\treturn coords.every((c, i) => {\n\t\t\tlet meta = coordMeta[i];\n\n\t\t\tif (meta.type !== \"angle\" && meta.range) {\n\t\t\t\tif (Number.isNaN(c)) {\n\t\t\t\t\t// NaN is always in gamut\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet [min, max] = meta.range;\n\t\t\t\treturn (min === undefined || c >= min - epsilon)\n\t\t\t\t    && (max === undefined || c <= max + epsilon);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tget cssId () {\n\t\treturn this.formats.functions?.color?.id || this.id;\n\t}\n\n\tget isPolar() {\n\t\tfor (let id in this.coords) {\n\t\t\tif (this.coords[id].type === \"angle\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetFormat (format) {\n\t\tif (typeof format === \"object\") {\n\t\t\treturn format;\n\t\t}\n\n\t\tfor (let type in this.formats) {\n\t\t\tfor (let name in this.formats[type]) {\n\t\t\t\tif (format === name || format === \"default\") {\n\t\t\t\t\treturn this.formats[type][name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t#path\n\n\t#getPath () {\n\t\tlet ret = [this];\n\n\t\tfor (let space = this; space = space.base;) {\n\t\t\tret.push(space);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tto (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\t[space, coords] = [space.space, space.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (this === space) {\n\t\t\t// Same space, no change needed\n\t\t\treturn coords;\n\t\t}\n\n\t\t// Convert NaN to 0, which seems to be valid in every coordinate of every color space\n\t\tcoords = coords.map(c => Number.isNaN(c)? 0 : c);\n\n\t\t// Find connection space = lowest common ancestor in the base tree\n\t\tlet myPath = this.#path;\n\t\tlet otherPath = space.#path;\n\n\t\tlet connectionSpace, connectionSpaceIndex;\n\n\t\tfor (let i=0; i < myPath.length; i++) {\n\t\t\tif (myPath[i] === otherPath[i]) {\n\t\t\t\tconnectionSpace = myPath[i];\n\t\t\t\tconnectionSpaceIndex = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!connectionSpace) {\n\t\t\t// This should never happen\n\t\t\tthrow new Error(`Cannot convert between color spaces ${this} and ${space}: no connection space was found`);\n\t\t}\n\n\t\t// Go up from current space to connection space\n\t\tfor (let i = myPath.length - 1; i > connectionSpaceIndex; i--) {\n\t\t\tcoords = myPath[i].toBase(coords);\n\t\t}\n\n\t\t// Go down from connection space to target space\n\t\tfor (let i = connectionSpaceIndex + 1; i < otherPath.length; i++) {\n\t\t\tcoords = otherPath[i].fromBase(coords);\n\t\t}\n\n\t\treturn coords;\n\t}\n\n\tfrom (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\t[space, coords] = [space.space, space.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\treturn space.to(this, coords);\n\t}\n\n\ttoString () {\n\t\treturn `${this.name} (${this.id})`;\n\t}\n\n\tgetMinCoords () {\n\t\tlet ret = [];\n\n\t\tfor (let id in this.coords) {\n\t\t\tlet meta = this.coords[id];\n\t\t\tlet range = meta.range || meta.refRange;\n\t\t\tret.push(range?.min ?? 0);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tstatic registry = {}\n\n\tstatic get all () {\n\t\treturn Object.values(ColorSpace.registry);\n\t}\n\n\tstatic register (id, space) {\n\t\tif (arguments.length === 1) {\n\t\t\tspace = arguments[0];\n\t\t\tid = space.id;\n\t\t}\n\n\t\tspace = this.get(space);\n\t\tthis.registry[id] = space;\n\t\treturn space;\n\t}\n\n\tstatic create (options) {\n\t\tlet space = new this(options);\n\t\treturn this.register(space);\n\t}\n\n\t/**\n\t * Lookup ColorSpace object by name\n\t * @param {ColorSpace | string} name\n\t */\n\tstatic get (space, ...alternatives) {\n\t\tif (!space || space instanceof ColorSpace) {\n\t\t\treturn space;\n\t\t}\n\n\t\tlet argType = type(space);\n\n\t\tif (argType === \"string\") {\n\t\t\t// It's a color space id\n\t\t\tlet ret = ColorSpace.registry[space.toLowerCase()];\n\n\t\t\tif (!ret) {\n\t\t\t\tthrow new TypeError(`No color space found with id = \"${space}\"`);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (alternatives.length) {\n\t\t\treturn ColorSpace.get(...alternatives);\n\t\t}\n\n\t\tthrow new TypeError(`${space} is not a valid color space`);\n\t}\n\n\t/**\n\t * Get metadata about a coordinate of a color space\n\t *\n\t * @static\n\t * @param {Array | string} ref\n\t * @param {ColorSpace | string} [workingSpace]\n\t * @return {Object}\n\t */\n\tstatic resolveCoord (ref, workingSpace) {\n\t\tlet coordType = type(ref);\n\t\tlet space, coord;\n\n\t\tif (coordType === \"string\") {\n\t\t\tif (ref.includes(\".\")) {\n\t\t\t\t// Absolute coordinate\n\t\t\t\t[space, coord] = ref.split(\".\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Relative coordinate\n\t\t\t\t[space, coord] = [, ref];\n\t\t\t}\n\t\t}\n\t\telse if (Array.isArray(ref)) {\n\t\t\t[space, coord] = ref;\n\t\t}\n\t\telse {\n\t\t\t// Object\n\t\t\tspace = ref.space;\n\t\t\tcoord = ref.coordId;\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (!space) {\n\t\t\tspace = workingSpace;\n\t\t}\n\n\t\tif (!space) {\n\t\t\tthrow new TypeError(`Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`);\n\t\t}\n\n\t\tcoordType = type(coord);\n\n\t\tif (coordType === \"number\" || coordType === \"string\" && coord >= 0) {\n\t\t\t// Resolve numerical coord\n\t\t\tlet meta = Object.entries(space.coords)[coord];\n\n\t\t\tif (meta) {\n\t\t\t\treturn {space, id: meta[0], index: coord, ...meta[1]}\n\t\t\t}\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tlet normalizedCoord = coord.toLowerCase();\n\n\t\tlet i = 0;\n\t\tfor (let id in space.coords) {\n\t\t\tlet meta = space.coords[id];\n\n\t\t\tif (id.toLowerCase() === normalizedCoord || meta.name?.toLowerCase() === normalizedCoord) {\n\t\t\t\treturn {space, id, index: i, ...meta};\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\tthrow new TypeError(`No \"${coord}\" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(\", \")}`);\n\t}\n\n\tstatic DEFAULT_FORMAT = {\n\t\ttype: \"functions\",\n\t\tname: \"color\",\n\t}\n}","import * as util from \"./util.js\";\nimport hooks from \"./hooks.js\";\nimport ColorSpace from \"./space.js\";\n\n// CSS color to Color object\nexport default function parse (str) {\n\tlet env = {str};\n\thooks.run(\"parse-start\", env);\n\n\tif (env.color) {\n\t\treturn env.color;\n\t}\n\n\tenv.parsed = util.parseFunction(env.str);\n\n\tif (env.parsed) {\n\t\t// Is a functional syntax\n\t\tlet name = env.parsed.name;\n\n\t\tif (name === \"color\") {\n\t\t\t// color() function\n\t\t\tlet id = env.parsed.args.shift();\n\t\t\tlet alpha = env.parsed.rawArgs.indexOf(\"/\") > 0? env.parsed.args.pop() : 1;\n\n\t\t\tfor (let space of ColorSpace.all) {\n\t\t\t\tlet colorSpec = space.formats?.functions?.color;\n\t\t\t\tif (colorSpec) {\n\t\t\t\t\tif (id === colorSpec.id || colorSpec.ids?.includes(id)) {\n\t\t\t\t\t\t// From https://drafts.csswg.org/css-color-4/#color-function\n\t\t\t\t\t\t// If more <number>s or <percentage>s are provided than parameters that the colorspace takes, the excess <number>s at the end are ignored.\n\t\t\t\t\t\t// If less <number>s or <percentage>s are provided than parameters that the colorspace takes, the missing parameters default to 0. (This is particularly convenient for multichannel printers where the additional inks are spot colors or varnishes that most colors on the page wonât use.)\n\t\t\t\t\t\tlet argCount = Object.keys(space.coords).length;\n\t\t\t\t\t\tlet coords = Array(argCount).fill(0);\n\t\t\t\t\t\tcoords.forEach((_, i) => coords[i] = env.parsed.args[i] || 0);\n\n\t\t\t\t\t\treturn {spaceId: space.id, coords, alpha};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Not found\n\t\t\tlet didYouMean = \"\";\n\t\t\tif (id in ColorSpace.registry) {\n\t\t\t\t// Used color space id instead of color() id, these are often different\n\t\t\t\tlet cssId = ColorSpace.registry[id].formats?.functions?.color?.id;\n\t\t\t\tdidYouMean = `Did you mean color(${cssId})?`;\n\t\t\t}\n\t\t\tthrow new TypeError(`Cannot parse color(${id}). ` + (didYouMean || \"Missing a plugin?\"));\n\t\t}\n\t\telse {\n\t\t\tfor (let space of ColorSpace.all) {\n\t\t\t\t// color space specific function\n\t\t\t\tif (space.formats.functions?.[name]) {\n\t\t\t\t\tlet format = space.formats.functions[name];\n\t\t\t\t\tlet alpha = 1;\n\n\t\t\t\t\tif (format.lastAlpha || util.last(env.parsed.args).alpha) {\n\t\t\t\t\t\talpha = env.parsed.args.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tlet coords = env.parsed.args;\n\n\t\t\t\t\tif (format.coordGrammar) {\n\t\t\t\t\t\tObject.entries(space.coords).forEach(([id, coordMeta], i) => {\n\t\t\t\t\t\t\tlet coordGrammar = format.coordGrammar[i];\n\t\t\t\t\t\t\tlet providedType = coords[i]?.type;\n\n\t\t\t\t\t\t\t// Find grammar alternative that matches the provided type\n\t\t\t\t\t\t\t// Non-strict equals is intentional because we are comparing w/ string objects\n\t\t\t\t\t\t\tcoordGrammar = coordGrammar.find(c => c == providedType);\n\n\t\t\t\t\t\t\t// Check that each coord conforms to its grammar\n\t\t\t\t\t\t\tif (!coordGrammar) {\n\t\t\t\t\t\t\t\t// Type does not exist in the grammar, throw\n\t\t\t\t\t\t\t\tconsole.log(coordMeta)\n\t\t\t\t\t\t\t\tlet coordName = coordMeta.name || id;\n\t\t\t\t\t\t\t\tthrow new TypeError(`${providedType} not allowed for ${coordName} in ${name}()`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet fromRange = coordGrammar.range;\n\n\t\t\t\t\t\t\tif (providedType === \"<percentage>\") {\n\t\t\t\t\t\t\t\tfromRange ||= [0, 1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet toRange = coordMeta.range || coordMeta.refRange;\n\n\t\t\t\t\t\t\tif (fromRange && toRange) {\n\n\t\t\t\t\t\t\t\tcoords[i] = util.mapRange(fromRange, toRange, coords[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tspaceId: space.id,\n\t\t\t\t\t\tcoords, alpha\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Custom, colorspace-specific format\n\t\tfor (let space of ColorSpace.all) {\n\t\t\tfor (let formatId in space.formats.custom) {\n\t\t\t\tlet format = space.formats.custom[formatId];\n\n\t\t\t\tif (format.test && !format.test(env.str)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet color = format.parse(env.str);\n\n\t\t\t\tif (color) {\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If we're here, we couldn't parse\n\tthrow new TypeError(`Could not parse ${str} as a color. Missing a plugin?`);\n}","import ColorSpace from \"./space.js\";\nimport {isString} from \"./util.js\";\nimport parse from \"./parse.js\";\n\n/**\n * Resolves a color reference (object or string) to a plain color object\n * @param {Color | {space, coords, alpha} | string} color\n * @returns {{space, coords, alpha}}\n */\nexport default function getColor (color) {\n\tif (!color) {\n\t\tthrow new TypeError(\"Empty color reference\");\n\t}\n\n\tif (isString(color)) {\n\t\tcolor = parse(color);\n\t}\n\n\t// Object fixup\n\tlet space = color.space || color.spaceId;\n\n\tif (!(space instanceof ColorSpace)) {\n\t\t// Convert string id to color space object\n\t\tcolor.space = ColorSpace.get(space);\n\t}\n\n\tif (color.alpha === undefined) {\n\t\tcolor.alpha = 1;\n\t}\n\n\treturn color;\n}","import ColorSpace from \"./space.js\";\n\n/**\n * Get the coordinates of a color in another color space\n *\n * @param {string | ColorSpace} space\n * @returns {number[]}\n */\nexport default function getAll (color, space) {\n\tspace = ColorSpace.get(space);\n\treturn space.from(color);\n}","import ColorSpace from \"./space.js\";\nimport getAll from \"./getAll.js\";\n\nexport default function get (color, prop) {\n\tlet {space, index} = ColorSpace.resolveCoord(prop, color.space);\n\tlet coords = getAll(color, space);\n\treturn coords[index];\n}","import ColorSpace from \"./space.js\";\n\nexport default function setAll (color, space, coords) {\n\tspace = ColorSpace.get(space);\n\tcolor.coords = space.to(color.space, coords);\n\treturn color;\n}","import ColorSpace from \"./space.js\";\nimport getColor from \"./getColor.js\";\nimport get from \"./get.js\";\nimport getAll from \"./getAll.js\";\nimport setAll from \"./setAll.js\";\nimport {type} from \"./util.js\";\n\n// Set properties and return current instance\nexport default function set (color, prop, value) {\n\tcolor = getColor(color);\n\n\tif (arguments.length === 2 && type(arguments[1]) === \"object\") {\n\t\t// Argument is an object literal\n\t\tlet object = arguments[1];\n\t\tfor (let p in object) {\n\t\t\tset(color, p, object[p]);\n\t\t}\n\t}\n\telse {\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue = value(get(color, prop));\n\t\t}\n\n\t\tlet {space, index} = ColorSpace.resolveCoord(prop, color.space);\n\t\tlet coords = getAll(color, space);\n\t\tcoords[index] = value;\n\t\tsetAll(color, space, coords);\n\t}\n\n\treturn color;\n}","import ColorSpace from \"../space.js\";\n\nconst XYZ = ColorSpace.create({\n\tid: \"xyz-d65\",\n\tname: \"XYZ D65\",\n\tcoords: {\n\t\tx: {name: \"X\"},\n\t\ty: {name: \"Y\"},\n\t\tz: {name: \"Z\"},\n\t},\n\twhite: \"D65\",\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t},\n});\n\nexport default XYZ;\n\n// Register xyz alias\nColorSpace.register(\"xyz\", XYZ);\nXYZ.formats.functions.color.ids ||= [];\nXYZ.formats.functions.color.ids.push(\"xyz\");","import ColorSpace from \"../space.js\";\nimport adapt from \"../adapt.js\";\nimport XYZ_D65 from \"./xyz-d65.js\";\n\nexport default ColorSpace.create({\n\tid: \"xyz-d50\",\n\tname: \"XYZ D50\",\n\twhite: \"D50\",\n\tbase: XYZ_D65,\n\tfromBase: coords => adapt(XYZ_D65.white, \"D50\", coords),\n\ttoBase: coords => adapt(\"D50\", XYZ_D65.white, coords),\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t},\n});","import ColorSpace from \"../space.js\";\nimport {WHITES} from \"../adapt.js\";\nimport xyz_d50 from \"./xyz-d50.js\";\n\n// Îº * Îµ  = 2^3 = 8\nconst Îµ = 216/24389;  // 6^3/29^3 == (24/116)^3\nconst Îµ3 = 24/116;\nconst Îº = 24389/27;   // 29^3/3^3\n\nlet white = WHITES.D50;\n\nexport default ColorSpace.create({\n\tid: \"lab\",\n\tname: \"Lab\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125]\n\t\t}\n\t},\n\n\t// Assuming XYZ is relative to D50, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite,\n\n\tbase: xyz_d50,\n\t// Convert D50-adapted XYX to Lab\n\t//  CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => value > Îµ ? Math.cbrt(value) : (Îº * value + 16)/116);\n\n\t\treturn [\n\t\t\t(116 * f[1]) - 16, \t // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2])  // b\n\t\t];\n\t},\n\t// Convert Lab to D50-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16)/116;\n\t\tf[0] = Lab[1]/500 + f[1];\n\t\tf[2] = f[1] - Lab[2]/200;\n\n\t\t// compute xyz\n\t\tlet xyz = [\n\t\t\tf[0]   > Îµ3  ?  Math.pow(f[0], 3)            : (116*f[0]-16)/Îº,\n\t\t\tLab[0] > 8   ?  Math.pow((Lab[0]+16)/116, 3) : Lab[0]/Îº,\n\t\t\tf[2]   > Îµ3  ?  Math.pow(f[2], 3)            : (116*f[2]-16)/Îº\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white[i]);\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"lab\": {\n\t\t\t\tcoords: [\"<percentage> | <number>\", \"<number>\", \"<number>\"],\n\t\t\t}\n\t\t}\n\t}\n});\n","export function constrain (angle) {\n\treturn ((angle % 360) + 360) % 360;\n}\n\nexport function adjust (arc, angles) {\n\tif (arc === \"raw\") {\n\t\treturn angles;\n\t}\n\n\tlet [a1, a2] = angles.map(constrain);\n\n\tlet angleDiff = a2 - a1;\n\n\tif (arc === \"increasing\") {\n\t\tif (angleDiff < 0) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\telse if (arc === \"decreasing\") {\n\t\tif (angleDiff > 0) {\n\t\t\ta1 += 360;\n\t\t}\n\t}\n\telse if (arc === \"longer\") {\n\t\tif (-180 < angleDiff && angleDiff < 180) {\n\t\t\tif (angleDiff > 0) {\n\t\t\t\ta2 += 360;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ta1 += 360;\n\t\t\t}\n\t\t}\n\t}\n\telse if (arc === \"shorter\") {\n\t\tif (angleDiff > 180) {\n\t\t\ta1 += 360;\n\t\t}\n\t\telse if (angleDiff < -180) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\n\treturn [a1, a2];\n}\n","import ColorSpace from \"../space.js\";\nimport Lab from \"./lab.js\";\nimport {constrain as constrainAngle} from \"../angles.js\";\n\nexport default ColorSpace.create({\n\tid: \"lch\",\n\tname: \"LCH\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\"\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 150],\n\t\t\tname: \"Chroma\"\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t}\n\t},\n\n\tbase: Lab,\n\tfromBase (Lab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = Lab;\n\t\tlet hue;\n\t\tconst Îµ = 0.02;\n\n\t\tif (Math.abs(a) < Îµ && Math.abs(b) < Îµ) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrainAngle(hue) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (LCH) {\n\t\t// Convert from polar form\n\t\tlet [Lightness, Chroma, Hue] = LCH;\n\t\t// Clamp any negative Chroma\n\t\tif (Chroma < 0) {\n\t\t\tChroma = 0;\n\t\t};\n\t\t// Deal with NaN Hue\n\t\tif (isNaN(Hue)) {\n\t\t\tHue = 0;\n\t\t}\n\t\treturn [\n\t\t\tLightness, // L is still L\n\t\t\tChroma * Math.cos(Hue * Math.PI / 180), // a\n\t\t\tChroma * Math.sin(Hue * Math.PI / 180)  // b\n\t\t];\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"lch\": {\n\t\t\t\tcoords: [\"<percentage> | <number>\", \"<number>\", \"<number> | <angle>\"],\n\t\t\t}\n\t\t}\n\t}\n});\n","import lab from \"../spaces/lab.js\";\nimport lch from \"../spaces/lch.js\";\n\n// deltaE2000 is a statistically significant improvement\n// and is recommended by the CIE and Idealliance\n// especially for color differences less than 10 deltaE76\n// but is wicked complicated\n// and many implementations have small errors!\n// DeltaE2000 is also discontinuous; in case this\n// matters to you, use deltaECMC instead.\n\nconst Gfactor = 25 ** 7;\nconst Ï = Math.PI;\nconst r2d = 180 / Ï;\nconst d2r = Ï / 180;\n\nexport default function (color, sample, {kL = 1, kC = 1, kH = 1} = {}) {\n\t// Given this color as the reference\n\t// and the function parameter as the sample,\n\t// calculate deltaE 2000.\n\n\t// This implementation assumes the parametric\n\t// weighting factors kL, kC and kH\n\t// for the influence of viewing conditions\n\t// are all 1, as sadly seems typical.\n\t// kL should be increased for lightness texture or noise\n\t// and kC increased for chroma noise\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet C1 = lch.from(lab, [L1, a1, b1])[1];\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\tlet Cbar = (C1 + C2)/2; // mean Chroma\n\n\t// calculate a-axis asymmetry factor from mean Chroma\n\t// this turns JND ellipses for near-neutral colors back into circles\n\tlet C7 = Cbar ** 7;\n\n\tlet G = 0.5 * (1 - Math.sqrt(C7/(C7 + Gfactor)));\n\n\t// scale a axes by asymmetry factor\n\t// this by the way is why there is no Lab2000 colorspace\n\tlet adash1 = (1 + G) * a1;\n\tlet adash2 = (1 + G) * a2;\n\n\t// calculate new Chroma from scaled a and original b axes\n\tlet Cdash1 = Math.sqrt(adash1 ** 2 + b1 ** 2);\n\tlet Cdash2 = Math.sqrt(adash2 ** 2 + b2 ** 2);\n\n\t// calculate new hues, with zero hue for true neutrals\n\t// and in degrees, not radians\n\n\tlet h1 = (adash1 === 0 && b1 === 0)? 0: Math.atan2(b1, adash1);\n\tlet h2 = (adash2 === 0 && b2 === 0)? 0: Math.atan2(b2, adash2);\n\n\tif (h1 < 0) {\n\t\th1 += 2 * Ï;\n\t}\n\tif (h2 < 0) {\n\t\th2 += 2 * Ï;\n\t}\n\n\th1 *= r2d;\n\th2 *= r2d;\n\n\t// Lightness and Chroma differences; sign matters\n\tlet ÎL = L2 - L1;\n\tlet ÎC = Cdash2 - Cdash1;\n\n\t// Hue difference, getting the sign correct\n\tlet hdiff = h2 - h1;\n\tlet hsum = h1 + h2;\n\tlet habs = Math.abs(hdiff);\n\tlet Îh;\n\n\tif (Cdash1 * Cdash2 === 0) {\n\t\tÎh = 0;\n\t}\n\telse if (habs <= 180) {\n\t\tÎh = hdiff;\n\t}\n\telse if (hdiff > 180) {\n\t\tÎh = hdiff - 360;\n\t}\n\telse if (hdiff < -180) {\n\t\tÎh = hdiff + 360;\n\t}\n\telse {\n\t\tconsole.log(\"the unthinkable has happened\");\n\t}\n\n\t// weighted Hue difference, more for larger Chroma\n\tlet ÎH = 2 * Math.sqrt(Cdash2 * Cdash1) * Math.sin(Îh * d2r / 2);\n\n\t// calculate mean Lightness and Chroma\n\tlet Ldash = (L1 + L2)/2;\n\tlet Cdash = (Cdash1 + Cdash2)/2;\n\tlet Cdash7 = Math.pow(Cdash, 7);\n\n\t// Compensate for non-linearity in the blue region of Lab.\n\t// Four possibilities for hue weighting factor,\n\t// depending on the angles, to get the correct sign\n\tlet hdash;\n\tif (Cdash1 * Cdash2 === 0) {\n\t\thdash = hsum;   // which should be zero\n\t}\n\telse if (habs <= 180) {\n\t\thdash = hsum / 2;\n\t}\n\telse if (hsum < 360) {\n\t\thdash = (hsum + 360) / 2;\n\t}\n\telse {\n\t\thdash = (hsum - 360) / 2;\n\t}\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor\n\t// a background with L=50 is assumed\n\tlet lsq = (Ldash - 50) ** 2;\n\tlet SL = 1 + ((0.015 * lsq) / Math.sqrt(20 + lsq));\n\n\t// SC Chroma factor, similar to those in CMC and deltaE 94 formulae\n\tlet SC = 1 + 0.045 * Cdash;\n\n\t// Cross term T for blue non-linearity\n\tlet T = 1;\n\tT -= (0.17 * Math.cos((     hdash - 30)  * d2r));\n\tT += (0.24 * Math.cos(  2 * hdash        * d2r));\n\tT += (0.32 * Math.cos(((3 * hdash) + 6)  * d2r));\n\tT -= (0.20 * Math.cos(((4 * hdash) - 63) * d2r));\n\n\t// SH Hue factor depends on Chroma,\n\t// as well as adjusted hue angle like deltaE94.\n\tlet SH = 1 + 0.015 * Cdash * T;\n\n\t// RT Hue rotation term compensates for rotation of JND ellipses\n\t// and Munsell constant hue lines\n\t// in the medium-high Chroma blue region\n\t// (Hue 225 to 315)\n\tlet ÎÎ¸ = 30 * Math.exp(-1 * (((hdash - 275)/25) ** 2));\n\tlet RC = 2 * Math.sqrt(Cdash7/(Cdash7 + Gfactor));\n\tlet RT = -1 * Math.sin(2 * ÎÎ¸ * d2r) * RC;\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ÎL / (kL * SL)) ** 2;\n\tdE += (ÎC / (kC * SC)) ** 2;\n\tdE += (ÎH / (kH * SH)) ** 2;\n\tdE += RT * (ÎC / (kC * SC)) * (ÎH / (kH * SH));\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n};","import ColorSpace from \"./space.js\";\nimport getColor from \"./getColor.js\";\n\nconst Îµ = .000075;\n\n/**\n * Check if a color is in gamut of either its own or another color space\n * @return {Boolean} Is the color in gamut?\n */\nexport default function inGamut (color, space = color.space, {epsilon = Îµ} = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\tlet coords = color.coords;\n\n\tif (space !== color.space) {\n\t\tcoords = space.from(color);\n\t}\n\n\treturn space.inGamut(coords, {epsilon});\n}","export default function clone(color) {\n\treturn {\n\t\tspace: color.space,\n\t\tcoords: color.coords.slice(),\n\t\talpha: color.alpha\n\t};\n}","import * as util from \"./util.js\";\nimport ColorSpace from \"./space.js\";\nimport defaults from \"./defaults.js\";\nimport deltaE2000 from \"./deltaE/deltaE2000.js\";\nimport inGamut from \"./inGamut.js\";\nimport to from \"./to.js\";\nimport get from \"./get.js\";\nimport set from \"./set.js\";\nimport clone from \"./clone.js\";\n\n/**\n * Force coordinates to be in gamut of a certain color space.\n * Mutates the color it is passed.\n * @param {Object} options\n * @param {string} options.method - How to force into gamut.\n *        If \"clip\", coordinates are just clipped to their reference range.\n *        If in the form [colorSpaceId].[coordName], that coordinate is reduced\n *        until the color is in gamut. Please note that this may produce nonsensical\n *        results for certain coordinates (e.g. hue) or infinite loops if reducing the coordinate never brings the color in gamut.\n * @param {ColorSpace|string} options.space - The space whose gamut we want to map to\n */\nexport default function toGamut (color, {method = defaults.gamut_mapping, space = color.space} = {}) {\n\tif (util.isString(arguments[1])) {\n\t\tspace = arguments[1];\n\t}\n\n\tspace = ColorSpace.get(space);\n\n\tif (inGamut(color, space, {epsilon: 0})) {\n\t\treturn color;\n\t}\n\n\t// 3 spaces:\n\t// color.space: current color space\n\t// space: space whose gamut we are mapping to\n\t// mapSpace: space with the coord we're reducing\n\tlet spaceColor = to(color, space);\n\n\tif (method !== \"clip\" && !inGamut(color, space)) {\n\t\tlet clipped = toGamut(clone(spaceColor), {method: \"clip\", space});\n\t\tif (deltaE2000(color, clipped) > 2) {\n\t\t\t// Reduce a coordinate of a certain color space until the color is in gamut\n\t\t\tlet coordMeta = ColorSpace.resolveCoord(method);\n\t\t\tlet mapSpace = coordMeta.space;\n\t\t\tlet coordId = coordMeta.id;\n\n\t\t\tlet mappedColor = to(spaceColor, mapSpace);\n\t\t\tlet bounds = coordMeta.range || coordMeta.refRange;\n\t\t\tlet min = bounds[0];\n\t\t\tlet Îµ = .01; // for deltaE\n\t\t\tlet low = min;\n\t\t\tlet high = get(mappedColor, coordId);\n\n\t\t\twhile (high - low > Îµ) {\n\t\t\t\tlet clipped = clone(mappedColor);\n\t\t\t\tclipped = toGamut(clipped, {space, method: \"clip\"});\n\t\t\t\tlet deltaE = deltaE2000(mappedColor, clipped);\n\n\t\t\t\tif (deltaE - 2 < Îµ) {\n\t\t\t\t\tlow = get(mappedColor, coordId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thigh = get(mappedColor, coordId);\n\t\t\t\t}\n\n\t\t\t\tset(mappedColor, coordId, (low + high) / 2);\n\t\t\t}\n\n\t\t\tspaceColor = to(mappedColor, space);\n\t\t}\n\t\telse {\n\t\t\tspaceColor = clipped;\n\t\t}\n\t}\n\n\tif (method === \"clip\" // Dumb coord clipping\n\t\t// finish off smarter gamut mapping with clip to get rid of Îµ, see #17\n\t\t|| !inGamut(spaceColor, space, {epsilon: 0})\n\t) {\n\t\tlet bounds = Object.values(space.coords).map(c => c.range || []);\n\n\t\tspaceColor.coords = spaceColor.coords.map((c, i) => {\n\t\t\tlet [min, max] = bounds[i];\n\n\t\t\tif (min !== undefined) {\n\t\t\t\tc = Math.max(min, c);\n\t\t\t}\n\n\t\t\tif (max !== undefined) {\n\t\t\t\tc = Math.min(c, max);\n\t\t\t}\n\n\t\t\treturn c;\n\t\t});\n\t}\n\n\tif (space !== color.space) {\n\t\tspaceColor = to(spaceColor, color.space);\n\t}\n\n\tcolor.coords = spaceColor.coords;\n\treturn color;\n}\n\ntoGamut.returns = \"color\";","import getColor from \"./getColor.js\";\nimport ColorSpace from \"./space.js\";\nimport toGamut from \"./toGamut.js\";\n\n/**\n * Convert to color space and return a new color\n * @param {Object|string} space - Color space object or id\n * @param {Object} options\n * @param {boolean} options.inGamut - Whether to force resulting color in gamut\n * @returns {Color}\n */\nexport default function to (color, space, {inGamut} = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\n\tlet coords = space.from(color);\n\tlet ret = {space, coords, alpha: color.alpha};\n\n\tif (inGamut) {\n\t\tret = toGamut(ret);\n\t}\n\n\treturn ret;\n}\n\nto.returns = \"color\";","import * as util from \"./util.js\";\nimport ColorSpace from \"./space.js\";\nimport defaults from \"./defaults.js\";\nimport getColor from \"./getColor.js\";\nimport to from \"./to.js\";\nimport checkInGamut from \"./inGamut.js\";\nimport toGamut from \"./toGamut.js\";\n\n/**\n * Generic toString() method, outputs a color(spaceId ...coords) function, a functional syntax, or custom formats defined by the color space\n * @param {Object} options\n * @param {number} options.precision - Significant digits\n * @param {Function|String|Array} options.serializeCoords - If function, maps all coordinates. Keywords tap to colorspace-specific formats (e.g. \"hex\")\n * @param {boolean} options.inGamut - Adjust coordinates to fit in gamut first? [default: false]\n * @param {string} options.name - Function name [default: color]\n */\nexport default function serialize (color, {\n\tprecision = defaults.precision,\n\tformat = \"default\",\n\tinGamut = true,\n\tfallback,\n\t...customOptions\n} = {}) {\n\tlet ret;\n\n\tcolor = getColor(color);\n\n\tformat = color.space.getFormat(format)\n\t\t   ?? color.space.getFormat(\"default\")\n\t\t   ?? ColorSpace.DEFAULT_FORMAT;\n\n\tinGamut ||= format.toGamut;\n\n\tlet coords = color.coords;\n\n\t// Convert NaN to zeros to have a chance at a valid CSS color\n\t// Also convert -0 to 0\n\t// This also clones it so we can manipulate it\n\tcoords = coords.map(c => c? c : 0);\n\n\tif (inGamut && !checkInGamut(color)) {\n\t\tcoords = toGamut(color, inGamut === true? undefined : inGamut).coords;\n\t}\n\n\tif (format.type === \"custom\") {\n\t\tcustomOptions.precision = precision;\n\t\tret = format.serialize(coords, color.alpha, customOptions);\n\t}\n\telse {\n\t\t// Functional syntax\n\t\tlet name = format.name || \"color\";\n\n\t\tif (format.serializeCoords) {\n\t\t\tcoords = format.serializeCoords(coords, precision);\n\t\t}\n\t\telse {\n\t\t\tif (precision !== null) {\n\t\t\t\tcoords = coords.map(c => util.toPrecision(c, precision));\n\t\t\t}\n\t\t}\n\n\t\tlet args = [...coords];\n\n\t\tif (name === \"color\") {\n\t\t\t// If output is a color() function, add colorspace id as first argument\n\t\t\targs.unshift(color.space.cssId);\n\t\t}\n\n\t\tlet strAlpha = color.alpha < 1? ` ${format.commas? \",\" : \"/\"} ${color.alpha}` : \"\";\n\t\tret = `${name}(${args.join(format.commas? \", \" : \" \")}${strAlpha})`;\n\t}\n\n\tif (fallback) {\n\t\t// Return a CSS string that's actually supported by the current browser\n\t\t// Return as a String object, so we can also hang the color object on it\n\t\t// in case it's different than this. That way third party code can use that\n\t\t// for e.g. computing text color, indicating out of gamut etc\n\n\t\tif (typeof CSS === \"undefined\" || CSS.supports(\"color\", ret) || !defaults.css_space) {\n\t\t\tret = new String(ret);\n\t\t\tret.color = color;\n\t\t}\n\t\telse {\n\t\t\t// If we're here, what we were about to output is not supported\n\t\t\t// Fall back to fallback space\n\t\t\tlet fallbackSpace = fallback === true? defaults.css_space : fallback;\n\t\t\tlet fallbackColor = to(color, fallbackSpace);\n\t\t\tret = new String(toString(fallbackColor));\n\t\t\tret.color = fallbackColor;\n\t\t}\n\n\t}\n\n\treturn ret;\n}","import ColorSpace from \"./space.js\";\n\n/**\n * Euclidean distance of colors in an arbitrary color space\n */\nexport default function distance(color1, color2, space = \"lab\") {\n\tspace = ColorSpace.get(space);\n\n\tlet coords1 = space.from(color1);\n\tlet coords2 = space.from(color2);\n\n\treturn Math.sqrt(coords1.reduce((acc, c1, i) => {\n\t\tlet c2 = coords2[i];\n\t\tif (isNaN(c1) || isNaN(c2)) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn acc + (c2 - c1) ** 2;\n\t}, 0));\n}","import getColor from \"./getColor.js\";\n\nexport default function equals (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\treturn color1.space === color2.space\n\t\t   && color1.alpha === color2.alpha\n\t\t   && color1.coords.every((c, i) => c === color2.coords[i]);\n}","import getColor from \"./getColor.js\";\n\n// WCAG 2.0 contrast https://www.w3.org/TR/WCAG20-TECHS/G18.html\nexport default function contrast (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet L1 = color1.luminance;\n\tlet L2 = color2.luminance;\n\n\tif (L2 > L1) {\n\t\t[L1, L2] = [L2, L1];\n\t}\n\n\treturn (L1 + .05) / (L2 + .05);\n}\n\nexport function register(Color) {\n\tColor.defineFunction(\"contrast\", contrast);\n}","/**\n * Relative luminance\n */\nimport get from \"./get.js\";\nimport xyz_d65 from \"./spaces/xyz-d65.js\";\n\nexport function getLuminance(color) {\n\treturn get(color, [xyz_d65, \"y\"]);\n}\n\nexport function setLuminance(color) {\n\tset(color, [xyz_d65, \"y\"], value);\n}\n\nexport function register(Color) {\n\tObject.defineProperty(Color.prototype, \"luminance\", {\n\t\tget () {\n\t\t\treturn getLuminance(this);\n\t\t},\n\t\tset (value) {\n\t\t\tsetLuminance(this, value);\n\t\t}\n\t});\n}","import xyz_d65 from \"./spaces/xyz-d65.js\";\nimport Color from \"./color.js\";\n\n// Chromaticity coordinates\nexport function uv (color) {\n\tlet [X, Y, Z] = color.getAll(xyz_d65);\n\tlet denom = X + 15 * Y + 3 * Z;\n\treturn [4 * X / denom, 9 * Y / denom];\n}\n\nexport function xy (color) {\n\tlet [X, Y, Z] = color.getAll(xyz_d65);\n\tlet  sum = X + Y + Z;\n\treturn [X / sum, Y / sum];\n}\n\nexport function register(Color) {\n\t// no setters, as lightness information is lost\n\t// when converting color to chromaticity\n\tObject.defineProperty(Color.prototype, \"uv\", {\n\t\tget () {\n\t\t\treturn uv(this);\n\t\t}\n\t});\n\n\tObject.defineProperty(Color.prototype, \"xy\", {\n\t\tget () {\n\t\t\treturn xy(this);\n\t\t}\n\t});\n}\n","import Color from \"./color.js\";\nimport getColor from \"./getColor.js\";\nimport {isString} from \"./util.js\";\nexport const DELTAE_METHODS = {};\n\nexport default function deltaE (c1, c2, o = {}) {\n\tif (isString(o)) {\n\t\to = {method: o};\n\t}\n\n\tlet {method = Color.defaults.deltaE, ...rest} = o;\n\n\tc1 = getColor(c1);\n\tc2 = getColor(c2);\n\n\tif (method in DELTAE_METHODS) {\n\t\treturn DELTAE_METHODS[method](c1, c2, rest);\n\t}\n\n\tthrow new TypeError(`Unknown deltaE method: ${method}`);\n};\n\nexport function registerMethod(name, code) {\n\tlet id = name.replace(/^deltaE/, \"\");\n\tDELTAE_METHODS[id] = code;\n}\n\nexport function register(Color) {\n\tColor.defineFunction(\"deltaE\", deltaE);\n\n\tfor (let method in DELTAE_METHODS) {\n\t\tlet methodName = \"deltaE\" + method;\n\n\t\tColor.defineFunction(methodName, function(c1, c2, o) {\n\t\t\tc1 = getColor(c1);\n\t\t\treturn DELTAE_METHODS[method](c1, c2, o);\n\t\t});\n\t}\n}\n","import distance from \"../distance.js\";\n\nexport default function deltaE76 (color, sample) {\n\treturn distance(color, sample, \"lab\");\n};","import lab from \"../spaces/lab.js\";\nimport lch from \"../spaces/lch.js\";\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// CMC by the Color Measurement Committee of the\n// Bradford Society of Dyeists and Colorsts, 1994.\n// Uses LCH rather than Lab,\n// with different weights for L, C and H differences\n// A nice increase in accuracy for modest increase in complexity\nconst Ï = Math.PI;\nconst d2r = Ï / 180;\n\nexport default function (color, sample, {l = 2, c = 1} = {}) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE CMC.\n\n\t// This implementation assumes the parametric\n\t// weighting factors l:c are 2:1\n\t// which is typical for non-textile uses.\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet [, C1, H1] = lch.from(lab, [L1, a1, b1]);\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// let [L1, a1, b1] = color.getAll(lab);\n\t// let C1 = color.get(\"lch.c\");\n\t// let H1 = color.get(\"lch.h\");\n\t// let [L2, a2, b2] = sample.getAll(lab);\n\t// let C2 = sample.get(\"lch.c\");\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\t// we don't need H2 as ÎH is calculated from Îa, Îb and ÎC\n\n\t// Lightness and Chroma differences\n\t// These are (color - sample), unlike deltaE2000\n\tlet ÎL = L1 - L2;\n\tlet ÎC = C1 - C2;\n\n\tlet Îa = a1 - a2;\n\tlet Îb = b1 - b2;\n\n\t// weighted Hue difference, less for larger Chroma difference\n\n\tlet H2 = (Îa ** 2) + (Îb ** 2) - (ÎC ** 2);\n\t// due to roundoff error it is possible that, for zero a and b,\n\t// ÎC > Îa + Îb is 0, resulting in attempting\n\t// to take the square root of a negative number\n\n\t// trying instead the equation from Industrial Color Physics\n\t// By Georg A. Klein\n\n\t// let ÎH = ((a1 * b2) - (a2 * b1)) / Math.sqrt(0.5 * ((C2 * C1) + (a2 * a1) + (b2 * b1)));\n\t// console.log({ÎH});\n\t// This gives the same result to 12 decimal places\n\t// except it sometimes NaNs when trying to root a negative number\n\n\t// let ÎH = Math.sqrt(H2); we never actually use the root, it gets squared again!!\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor, depends entirely on L1 not L2\n\tlet SL = 0.511;\t// linear portion of the Y to L transfer function\n\tif (L1 >= 16) {\t// cubic portion\n\t\tSL = (0.040975 * L1) / (1 + 0.01765 * L1);\n\t}\n\n\t// SC Chroma factor\n\tlet SC = ((0.0638 * C1) / (1 + 0.0131 * C1)) + 0.638;\n\n\t// Cross term T for blue non-linearity\n\tlet T;\n\tif ( Number.isNaN(H1)) {\n\t\tH1 = 0;\n\t}\n\n\tif (H1 >= 164 && H1 <= 345) {\n\t\tT = 0.56 + Math.abs(0.2 * Math.cos((H1 + 168) * d2r));\n\t}\n\telse {\n\t\tT = 0.36 + Math.abs(0.4 * Math.cos((H1 + 35) * d2r));\n\t}\n\t// console.log({T});\n\n\t// SH Hue factor also depends on C1,\n\tlet C4 = Math.pow(C1, 4);\n\tlet F = Math.sqrt(C4 / (C4 + 1900));\n\tlet SH = SC * ((F * T) + 1 - F);\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ÎL / (l * SL)) ** 2;\n\tdE += (ÎC / (c * SC)) ** 2;\n\tdE += (H2 / (SH ** 2));\n\t// dE += (ÎH / SH)  ** 2;\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n};","import ColorSpace from \"../space.js\";\n\nconst Yw = 203;\t// absolute luminance of media white\n\nexport default ColorSpace.create({\n// Absolute CIE XYZ, with a D65 whitepoint,\n// as used in most HDR colorspaces as a starting point.\n// SDR spaces are converted per BT.2048\n// so that diffuse, media white is 203 cd/mÂ²\n\tid: \"xyz-abs-d65\",\n\tname: \"Absolute XYZ D65\",\n\tcoords: {\n\t\tx: {\n\t\t\trefRange: [0, 9504.7],\n\t\t\tname: \"Xa\",\n\t\t},\n\t\ty: {\n\t\t\trefRange: [0, 10000],\n\t\t\tname: \"Ya\",\n\t\t},\n\t\tz: {\n\t\t\trefRange: [0, 10888.3],\n\t\t\tname: \"Za\",\n\t\t}\n\t},\n\n\tbase: \"xyz-d65\",\n\tfromBase (XYZ) {\n\t\t// Make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/mÂ²\n\t\t// Relative XYZ has Y=1 for media white\n\t\treturn XYZ.map (v => Math.max(v * Yw, 0));\n\t},\n\ttoBase (AbsXYZ) {\n\t\t// Convert to media-white relative XYZ\n\t\treturn AbsXYZ.map(v => Math.max(v / Yw, 0));\n\t}\n});\n","import ColorSpace from \"../space.js\";\nimport {multiplyMatrices} from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\n\nconst b = 1.15;\nconst g = 0.66;\nconst n = 2610 / (2 ** 14);\nconst ninv = (2 ** 14) / 2610;\nconst c1 = 3424 / (2 ** 12);\nconst c2 = 2413 / (2 ** 7);\nconst c3 = 2392 / (2 ** 7);\nconst p = 1.7 * 2523 / (2 ** 5);\nconst pinv = (2 ** 5) / (1.7 * 2523);\nconst d = -0.56;\nconst d0 = 1.6295499532821566E-11;\n\nconst XYZtoCone_M = [\n\t[  0.41478972, 0.579999,  0.0146480 ],\n\t[ -0.2015100,  1.120649,  0.0531008 ],\n\t[ -0.0166008,  0.264800,  0.6684799 ]\n];\n// XYZtoCone_M inverted\nconst ConetoXYZ_M = [\n\t[  1.9242264357876067,  -1.0047923125953657,  0.037651404030618   ],\n\t[  0.35031676209499907,  0.7264811939316552, -0.06538442294808501 ],\n\t[ -0.09098281098284752, -0.3127282905230739,  1.5227665613052603  ]\n];\nconst ConetoIab_M = [\n\t[  0.5,       0.5,       0        ],\n\t[  3.524000, -4.066708,  0.542708 ],\n\t[  0.199076,  1.096799, -1.295875 ]\n];\n// ConetoIab_M inverted\nconst IabtoCone_M = [\n\t[ 1,                   0.1386050432715393,   0.05804731615611886 ],\n\t[ 0.9999999999999999, -0.1386050432715393,  -0.05804731615611886 ],\n\t[ 0.9999999999999998, -0.09601924202631895, -0.8118918960560388  ]\n];\n\nexport default ColorSpace.create({\n\tid: \"jzazbz\",\n\tname: \"Jzazbz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\taz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t},\n\t\tbz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t}\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// First make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/mÂ²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\n\t\tlet [ Xa, Ya, Za ] = XYZ;\n\n\t\t// modify X and Y\n\t\tlet Xm = (b * Xa) - ((b - 1) * Za);\n\t\tlet Ym = (g * Ya) - ((g - 1) * Xa);\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoCone_M, [ Xm, Ym, Za ]);\n\n\t\t// PQ-encode LMS\n\t\tlet PQLMS = LMS.map (function (val) {\n\t\t\tlet num = c1 + (c2 * ((val / 10000) ** n));\n\t\t\tlet denom = 1 + (c3 * ((val / 10000) ** n));\n\n\t\t\treturn (num / denom)  ** p;\n\t\t});\n\n\t\t// almost there, calculate Iz az bz\n\t\tlet [ Iz, az, bz] = multiplyMatrices(ConetoIab_M, PQLMS);\n\t\t// console.log({Iz, az, bz});\n\n\t\tlet Jz = ((1 + d) * Iz) / (1 + (d * Iz)) - d0;\n\t\treturn [Jz, az, bz];\n\t},\n\ttoBase (Jzazbz) {\n\t\tlet [Jz, az, bz] = Jzazbz;\n\t\tlet Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\n\t\t// bring into LMS cone domain\n\t\tlet PQLMS = multiplyMatrices(IabtoCone_M, [ Iz, az, bz ]);\n\n\t\t// convert from PQ-coded to linear-light\n\t\tlet LMS = PQLMS.map(function (val){\n\t\t\tlet num = (c1 - (val ** pinv));\n\t\t\tlet denom = (c3 * (val ** pinv)) - c2;\n\t\t\tlet x = 10000 * ((num / denom) ** ninv);\n\n\t\t\treturn (x); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\n\t\t// modified abs XYZ\n\t\tlet [ Xm, Ym, Za ] = multiplyMatrices(ConetoXYZ_M, LMS);\n\n\t\t// restore standard D50 relative XYZ, relative to media white\n\t\tlet Xa = (Xm + ((b -1) * Za)) / b;\n\t\tlet Ya = (Ym + ((g -1) * Xa)) / g;\n\t\treturn [ Xa, Ya, Za ];\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t// https://drafts.csswg.org/css-color-hdr/#Jzazbz\n\t\t\t\"color\": {}\n\t\t}\n\t}\n});\n\n","import ColorSpace from \"../space.js\";\nimport Jzazbz from \"./jzazbz.js\";\nimport {constrain as constrainAngle} from \"../angles.js\";\n\nexport default ColorSpace.create({\n\tid: \"jzczhz\",\n\tname: \"JzCzHz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\tcz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\thz: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t}\n\t},\n\n\tbase: Jzazbz,\n\tfromBase (jzazbz) {\n\t\t// Convert to polar form\n\t\tlet [Jz, az, bz] = jzazbz;\n\t\tlet hue;\n\t\tconst Îµ = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(az) < Îµ && Math.abs(bz) < Îµ) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(bz, az) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tJz, // Jz is still Jz\n\t\t\tMath.sqrt(az ** 2 + bz ** 2), // Chroma\n\t\t\tconstrainAngle(hue) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (jzczhz) {\n\t\t// Convert from polar form\n\t\t// debugger;\n\t\treturn [\n\t\t\tjzczhz[0], // Jz is still Jz\n\t\t\tjzczhz[1] * Math.cos(jzczhz[2] * Math.PI / 180), // az\n\t\t\tjzczhz[1] * Math.sin(jzczhz[2] * Math.PI / 180)  // bz\n\t\t];\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t},\n});","import jzczhz from \"../spaces/jzczhz.js\";\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// Uses JzCzHz, which has improved perceptual uniformity\n// and thus a simple Euclidean root-sum of ÎLÂ² ÎCÂ² ÎHÂ²\n// gives good results.\n\nexport default function (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in JzCzHz.\n\tlet [Jz1, Cz1, Hz1] = jzczhz.from(color);\n\tlet [Jz2, Cz2, Hz2] = jzczhz.from(sample);\n\n\t// Lightness and Chroma differences\n\t// sign does not matter as they are squared.\n\tlet ÎJ = Jz1 - Jz2;\n\tlet ÎC = Cz1 - Cz2;\n\n\t// length of chord for ÎH\n\tif ((Number.isNaN(Hz1)) && (Number.isNaN(Hz2))) {\n\t\t// both undefined hues\n\t\tHz1 = 0;\n\t\tHz2 = 0;\n\t} else\n\tif (Number.isNaN(Hz1)) {\n\t\t// one undefined, set to the defined hue\n\t\tHz1 = Hz2;\n\t} else\n\tif (Number.isNaN(Hz2)) {\n\t\tHz2 = Hz1;\n\t}\n\n\tlet Îh = Hz1 - Hz2;\n\tlet ÎH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Îh / 2) * (Math.PI / 180));\n\n\treturn Math.sqrt(ÎJ ** 2 + ÎC ** 2 + ÎH ** 2);\n};","import ColorSpace from \"../space.js\";\nimport {multiplyMatrices} from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\n\nconst c1 = 3424 / 4096;\nconst c2 = 2413 / 128;\nconst c3 = 2392 / 128;\nconst m1 = 2610 / 16384;\nconst m2 = 2523 / 32;\nconst im1 = 16384 / 2610;\nconst im2 = 32 / 2523;\n\n// The matrix below includes the 4% crosstalk components\n// and is from the Dolby \"What is ICtCp\" paper\"\nconst XYZtoLMS_M = [\n\t[ 0.3592,  0.6976, -0.0358],\n\t[-0.1922,  1.1004,  0.0755],\n\t[ 0.0070,  0.0749,  0.8434]\n];\n// linear-light Rec.2020 to LMS, again with crosstalk\n// rational terms from Jan FrÃ¶hlich,\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n// and ITU-R BT.2124-0 p.2\n/*\nconst Rec2020toLMS_M = [\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n];\n*/\n// this includes the Ebner LMS coefficients,\n// the rotation, and the scaling to [-0.5,0.5] range\n// rational terms from FrÃ¶hlich p.97\n// and ITU-R BT.2124-0 pp.2-3\nconst LMStoIPT_M = [\n\t[  2048 / 4096,   2048 / 4096,       0      ],\n\t[  6610 / 4096, -13613 / 4096,  7003 / 4096 ],\n\t[ 17933 / 4096, -17390 / 4096,  -543 / 4096 ]\n];\n\n// inverted matrices, calculated from the above\nconst IPTtoLMS_M = [\n\t[0.99998889656284013833, 0.00860505014728705821,  0.1110343715986164786 ],\n\t[1.0000111034371598616, -0.00860505014728705821, -0.1110343715986164786 ],\n\t[1.000032063391005412,   0.56004913547279000113, -0.32063391005412026469],\n];\n/*\nconst LMStoRec2020_M = [\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n];\n*/\nconst LMStoXYZ_M = [\n\t[ 2.0701800566956135096,   -1.3264568761030210255,    0.20661600684785517081 ],\n\t[ 0.36498825003265747974,   0.68046736285223514102,  -0.045421753075853231409],\n\t[-0.049595542238932107896, -0.049421161186757487412,  1.1879959417328034394  ]\n];\n\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n// from Dolby, \"WHAT IS ICTCP?\"\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n// and\n// Dolby, \"Perceptual Color Volume\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\nexport default ColorSpace.create({\n\tid: \"ictcp\",\n\tname: \"ICTCP\",\n\t// From BT.2100-2 page 7:\n\t// During production, signal values are expected to exceed the\n\t// range Eâ² = [0.0 : 1.0]. This provides processing headroom and avoids\n\t// signal degradation during cascaded processing. Such values of Eâ²,\n\t// below 0.0 or exceeding 1.0, should not be clipped during production\n\t// and exchange.\n\t// Values below 0.0 should not be clipped in reference displays (even\n\t// though they represent ânegativeâ light) to allow the black level of\n\t// the signal (LB) to be properly set using test signals known as âPLUGEâ\n\tcoords: {\n\t\ti: {\n\t\t\trefRange: [0, 1],\t// Constant luminance,\n\t\t\tname: \"I\"\n\t\t},\n\t\tct: {\n\t\t\trefRange: [-0.5, 0.5],\t// Full BT.2020 gamut in range [-0.5, 0.5]\n\t\t\tname: \"CT\"\n\t\t},\n\t\tcp: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t\tname: \"CP\"\n\t\t}\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\n\n\t\treturn LMStoICtCp(LMS);\n\t},\n\ttoBase (ICtCp) {\n\t\tlet LMS = ICtCptoLMS(ICtCp);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M, LMS);\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t},\n});\n\nfunction LMStoICtCp (LMS) {\n\t// apply the PQ EOTF\n\t// we can't ever be dividing by zero because of the \"1 +\" in the denominator\n\tlet PQLMS = LMS.map (function (val) {\n\t\tlet num = c1 + (c2 * ((val / 10000) ** m1));\n\t\tlet denom = 1 + (c3 * ((val / 10000) ** m1));\n\n\t\treturn (num / denom)  ** m2;\n\t});\n\n\t// LMS to IPT, with rotation for Y'C'bC'r compatibility\n\treturn multiplyMatrices(LMStoIPT_M, PQLMS);\n}\n\nfunction ICtCptoLMS (ICtCp) {\n\tlet PQLMS = multiplyMatrices(IPTtoLMS_M, ICtCp);\n\n\t// From BT.2124-0 Annex 2 Conversion 3\n\tlet LMS = PQLMS.map (function (val) {\n\t\tlet num  = Math.max((val ** im2) - c1, 0);\n\t\tlet denom = (c2 - (c3 * (val ** im2)));\n\t\treturn 10000 * ((num / denom) ** im1);\n\t});\n\n\treturn LMS;\n}\n","import ictcp from \"../spaces/ictcp.js\";\n\n// Delta E in ICtCp space,\n// which the ITU calls Delta E ITP, which is shorter\n// formulae from ITU Rec. ITU-R BT.2124-0\n\nexport default function (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in ICtCp\n\t// which is simply the Euclidean distance\n\n\tlet [ I1, T1, P1 ] = ictcp.from(color);\n\tlet [ I2, T2, P2 ] = ictcp.from(sample);\n\n\t// the 0.25 factor is to undo the encoding scaling in Ct\n\t// the 720 is so that 1 deltaE = 1 JND\n\t// per  ITU-R BT.2124-0 p.3\n\n\treturn 720 * Math.sqrt((I1 - I2) ** 2 + (0.25 * (T1 -T2) ** 2) + (P1 - P2) ** 2);\n};","import ColorSpace from \"../space.js\";\nimport {multiplyMatrices} from \"../util.js\";\n\n// Recalculated for consistent reference white\n// see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\nconst XYZtoLMS_M = [\n\t[ 0.8190224432164319,    0.3619062562801221,   -0.12887378261216414 ],\n\t[ 0.0329836671980271,    0.9292868468965546,     0.03614466816999844 ],\n\t[ 0.048177199566046255,  0.26423952494422764,    0.6335478258136937  ]\n];\n// inverse of XYZtoLMS_M\nconst LMStoXYZ_M = [\n\t[  1.2268798733741557,  -0.5578149965554813,   0.28139105017721583],\n\t[ -0.04057576262431372,  1.1122868293970594,  -0.07171106666151701],\n\t[ -0.07637294974672142, -0.4214933239627914,   1.5869240244272418 ]\n]\nconst LMStoLab_M = [\n\t[  0.2104542553,   0.7936177850,  -0.0040720468 ],\n\t[  1.9779984951,  -2.4285922050,   0.4505937099 ],\n\t[  0.0259040371,   0.7827717662,  -0.8086757660 ]\n];\n// LMStoIab_M inverted\nconst LabtoLMS_M = [\n\t[ 0.99999999845051981432,  0.39633779217376785678,   0.21580375806075880339  ],\n\t[ 1.0000000088817607767,  -0.1055613423236563494,   -0.063854174771705903402 ],\n\t[ 1.0000000546724109177,  -0.089484182094965759684, -1.2914855378640917399   ]\n];\n\nexport default ColorSpace.create({\n\tid: \"oklab\",\n    name: \"OKLab\",\n    coords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-0.4, 0.4]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-0.4, 0.4]\n\t\t}\n    },\n\n\t// Note that XYZ is relative to D65\n    white: \"D65\",\n\tbase: \"xyz-d65\",\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\n\n\t\t// non-linearity\n\t\tlet LMSg = LMS.map(val => Math.cbrt(val));\n\n\t\treturn multiplyMatrices(LMStoLab_M, LMSg);\n\n\t},\n\ttoBase (OKLab) {\n\t\t// move to LMS cone domain\n\t\tlet LMSg = multiplyMatrices(LabtoLMS_M, OKLab);\n\n\t\t// restore linearity\n\t\tlet LMS = LMSg.map(val => val ** 3);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M, LMS);\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"oklab\": {\n\t\t\t\tcoords: [\"<percentage>\", \"<number>\", \"<number>\"],\n\t\t\t\tcoordsOut: coords => coords.map((c, i) => i === 0? c * 100 + \"%\" : c)\n\t\t\t}\n\t\t}\n\t}\n});\n","// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in CIE Lab\n\nimport oklab from \"../spaces/oklab.js\";\n\nexport default function (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaEOK, term by term as root sum of squares\n\tlet [L1, a1, b1] = oklab.from(color);\n\tlet [L2, a2, b2] = oklab.from(sample);\n\tlet ÎL = L1 - L2;\n\tlet Îa = a1 - a2;\n\tlet Îb = b1 - b2;\n\treturn Math.sqrt(ÎL ** 2 + Îa ** 2 + Îb ** 2);\n};\n","import ColorSpace from \"./space.js\";\nimport set from \"./set.js\";\n\nexport function lighten (color, amount = .25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 + amount));\n}\n\nexport function darken (color, amount = .25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 - amount));\n}","/**\n * Functions related to color interpolation\n */\nimport Color from \"./color.js\";\nimport ColorSpace from \"./space.js\";\nimport {type, interpolate} from \"./util.js\";\nimport {getColor, clone, to, toGamut, get, set} from \"./index-fn.js\";\nimport defaults from \"./defaults.js\";\nimport * as angles from \"./angles.js\";\nimport deltaE from \"./deltaE.js\";\n\n/**\n * Return an intermediate color between two colors\n * Signatures: mix(c1, c2, p, options)\n *             mix(c1, c2, options)\n *             mix(color)\n * @param {Color | string} c1 The first color\n * @param {Color | string} [c2] The second color\n * @param {number} [p=.5] A 0-1 percentage where 0 is c1 and 1 is c2\n * @param {Object} [o={}]\n * @return {Color}\n */\nexport function mix (c1, c2, p = .5, o = {}) {\n\t[c1, c2] = [getColor(c1), getColor(c2)];\n\n\tif (type(p) === \"object\") {\n\t\t[p, o] = [.5, p];\n\t}\n\n\tlet {space, outputSpace} = o;\n\n\tlet r = range(c1, c2, {space, outputSpace});\n\treturn r(p);\n}\n\n/**\n *\n * @param {Color | string | Function} c1 The first color or a range\n * @param {Color | string} [c2] The second color if c1 is not a range\n * @param {Object} [options={}]\n * @return {Color[]}\n */\nexport function steps (c1, c2, options = {}) {\n\tlet colorRange;\n\n\tif (isRange(c1)) {\n\t\t// Tweaking existing range\n\t\t[colorRange, options] = [c1, c2];\n\t\t[c1, c2] = colorRange.rangeArgs.colors;\n\t}\n\n\tlet {\n\t\tmaxDeltaE, deltaEMethod,\n\t\tsteps = 2, maxSteps = 1000,\n\t\t...rangeOptions\n\t} = options;\n\n\tif (!colorRange) {\n\t\t[c1, c2] = [getColor(c1), getColor(c2)];\n\t\tcolorRange = range(c1, c2, rangeOptions);\n\t}\n\n\tlet totalDelta = deltaE(c1, c2);\n\tlet actualSteps = maxDeltaE > 0? Math.max(steps, Math.ceil(totalDelta / maxDeltaE) + 1) : steps;\n\tlet ret = [];\n\n\tif (maxSteps !== undefined) {\n\t\tactualSteps = Math.min(actualSteps, maxSteps);\n\t}\n\n\tif (actualSteps === 1) {\n\t\tret = [{p: .5, color: colorRange(.5)}];\n\t}\n\telse {\n\t\tlet step = 1 / (actualSteps - 1);\n\t\tret = Array.from({length: actualSteps}, (_, i) => {\n\t\t\tlet p = i * step;\n\t\t\treturn {p, color: colorRange(p)};\n\t\t});\n\t}\n\n\tif (maxDeltaE > 0) {\n\t\t// Iterate over all stops and find max deltaE\n\t\tlet maxDelta = ret.reduce((acc, cur, i) => {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet ÎÎ = deltaE(cur.color, ret[i - 1].color, deltaEMethod);\n\t\t\treturn Math.max(acc, ÎÎ);\n\t\t}, 0);\n\n\t\twhile (maxDelta > maxDeltaE) {\n\t\t\t// Insert intermediate stops and measure maxDelta again\n\t\t\t// We need to do this for all pairs, otherwise the midpoint shifts\n\t\t\tmaxDelta = 0;\n\n\t\t\tfor (let i = 1; (i < ret.length) && (ret.length < maxSteps); i++) {\n\t\t\t\tlet prev = ret[i - 1];\n\t\t\t\tlet cur = ret[i];\n\n\t\t\t\tlet p = (cur.p + prev.p) / 2;\n\t\t\t\tlet color = colorRange(p);\n\t\t\t\tmaxDelta = Math.max(maxDelta, deltaE(color, prev.color), deltaE(color, cur.color));\n\t\t\t\tret.splice(i, 0, {p, color: colorRange(p)});\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\n\tret = ret.map(a => a.color);\n\n\treturn ret;\n};\n\n/**\n * Interpolate to color2 and return a function that takes a 0-1 percentage\n * @param {Color | string | Function} color1 The first color or an existing range\n * @param {Color | string} [color2] If color1 is a color, this is the second color\n * @param {Object} [options={}]\n * @returns {Function} A function that takes a 0-1 percentage and returns a color\n */\nexport function range (color1, color2, options = {}) {\n\tif (isRange(color1)) {\n\t\t// Tweaking existing range\n\t\tlet [r, options] = [color1, color2];\n\n\t\treturn range(...r.rangeArgs.colors, {...r.rangeArgs.options, ...options});\n\t}\n\n\tlet {space, outputSpace, progression, premultiplied} = options;\n\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\t// Make sure we're working on copies of these colors\n\tcolor1 = clone(color1);\n\tcolor2 = clone(color2);\n\n\tlet rangeArgs = {colors: [color1, color2], options};\n\n\tif (space) {\n\t\tspace = ColorSpace.get(space);\n\t}\n\telse {\n\t\tspace = ColorSpace.registry[defaults.interpolationSpace] || color1.space;\n\t}\n\n\toutputSpace = outputSpace? ColorSpace.get(outputSpace) : space;\n\n\tcolor1 = to(color1, space);\n\tcolor2 = to(color2, space);\n\n\t// Gamut map to avoid areas of flat color\n\tcolor1 = toGamut(color1);\n\tcolor2 = toGamut(color2);\n\n\t// Handle hue interpolation\n\t// See https://github.com/w3c/csswg-drafts/issues/4735#issuecomment-635741840\n\tif (space.coords.h && space.coords.h.type === \"angle\") {\n\t\tlet arc = options.hue = options.hue || \"shorter\";\n\n\t\tlet hue = [space, \"h\"];\n\t\tlet [Î¸1, Î¸2] = [get(color1, hue), get(color2, hue)];\n\t\t[Î¸1, Î¸2] = angles.adjust(arc, [Î¸1, Î¸2]);\n\t\tset(color1, hue, Î¸1);\n\t\tset(color2, hue, Î¸2);\n\t}\n\n\tif (premultiplied) {\n\t\t// not coping with polar spaces yet\n\t\tcolor1.coords = color1.coords.map(c => c * color1.alpha);\n\t\tcolor2.coords = color2.coords.map(c => c * color2.alpha);\n\t}\n\n\treturn Object.assign(p => {\n\t\tp = progression? progression(p) : p;\n\t\tlet coords = color1.coords.map((start, i) => {\n\t\t\tlet end = color2.coords[i];\n\t\t\treturn interpolate(start, end, p);\n\t\t});\n\n\t\tlet alpha = interpolate(color1.alpha, color2.alpha, p);\n\t\tlet ret = {space, coords, alpha};\n\n\t\tif (premultiplied) {\n\t\t\t// undo premultiplication\n\t\t\tret.coords = ret.coords.map(c => c / alpha);\n\t\t}\n\n\t\tif (outputSpace !== space) {\n\t\t\tret = to(ret, outputSpace);\n\t\t}\n\n\t\treturn ret;\n\t}, {\n\t\trangeArgs\n\t});\n};\n\nexport function isRange (val) {\n\treturn type(val) === \"function\" && !!val.rangeArgs;\n};\n\ndefaults.interpolationSpace = \"lab\";\n\nexport function register(Color) {\n\tColor.defineFunction(\"mix\", mix, {returns: \"color\"});\n\tColor.defineFunction(\"range\", range, {returns: \"function<color>\"});\n\tColor.defineFunction(\"steps\", steps, {returns: \"array<color>\"});\n}\n\n","import ColorSpace from \"./space.js\";\nimport {multiplyMatrices} from \"./util.js\";\nimport adapt from \"./adapt.js\";\n\n/**\n * Convenience class for RGB color spaces\n * @extends {ColorSpace}\n */\nexport default class RGBColorSpace extends ColorSpace {\n\t/**\n\t * Creates a new RGB ColorSpace.\n\t * If coords are not specified, they will use the default RGB coords.\n\t * Instead of `fromBase()` and `toBase()` functions,\n\t * you can specify to/from XYZ matrices and have `toBase()` and `fromBase()` automatically generated.\n\t * @param {*} options - Same options as {@link ColorSpace} plus:\n\t * @param {number[][]} options.toXYZ_M - Matrix to convert to XYZ\n\t * @param {number[][]} options.fromXYZ_M - Matrix to convert from XYZ\n\t */\n\tconstructor (options) {\n\t\tif (!options.coords) {\n\t\t\toptions.coords = {\n\t\t\t\tr: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Red\"\n\t\t\t\t},\n\t\t\t\tg: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Green\"\n\t\t\t\t},\n\t\t\t\tb: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Blue\"\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (!options.base) {\n\t\t\toptions.base = \"xyz-d65\";\n\t\t}\n\n\t\tif (options.toXYZ_M && options.fromXYZ_M) {\n\t\t\toptions.toBase ??= rgb => {\n\t\t\t\tlet xyz = multiplyMatrices(options.toXYZ_M, rgb);\n\n\t\t\t\tif (this.white !== this.base.white) {\n\t\t\t\t\t// Perform chromatic adaptation\n\t\t\t\t\txyz = adapt(this.white, this.base.white, xyz);\n\t\t\t\t}\n\n\t\t\t\treturn xyz;\n\t\t\t};\n\n\t\t\toptions.fromBase ??= xyz => {\n\t\t\t\txyz = adapt(this.base.white, this.white, xyz);\n\t\t\t\treturn multiplyMatrices(options.fromXYZ_M, xyz);\n\t\t\t};\n\t\t}\n\n\t\toptions.referred ??= \"display\";\n\n\t\tsuper(options);\n\t}\n}","import RGBColorSpace from \"../rgbspace.js\";\n\n// This is the linear-light version of sRGB\n// as used for example in SVG filters\n// or in Canvas\n\n// This matrix was calculated directly from the RGB and white chromaticities\n// when rounded to 8 decimal places, it agrees completely with the official matrix\n// see https://github.com/w3c/csswg-drafts/issues/5922\nconst toXYZ_M = [\n\t[ 0.41239079926595934, 0.357584339383878,   0.1804807884018343  ],\n\t[ 0.21263900587151027, 0.715168678767756,   0.07219231536073371 ],\n\t[ 0.01933081871559182, 0.11919477979462598, 0.9505321522496607  ]\n];\n\n// This matrix is the inverse of the above;\n// again it agrees with the official definiton when rounded to 8 decimal places\nconst fromXYZ_M = [\n\t[  3.2409699419045226,  -1.537383177570094,   -0.4986107602930034  ],\n\t[ -0.9692436362808796,   1.8759675015077202,   0.04155505740717559 ],\n\t[  0.05563007969699366, -0.20397695888897652,  1.0569715142428786  ]\n];\n\nexport default RGBColorSpace.create({\n\tid: \"srgb-linear\",\n\tname: \"Linear sRGB\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M,\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t},\n});","/* List of CSS color keywords\n * Note that this does not include currentColor, transparent,\n * or system colors\n */\nimport Color from \"./color.js\";\n\n// To produce: Visit https://www.w3.org/TR/css-color-4/#named-colors\n// and run in the console:\n// copy($$(\"tr\", $(\".named-color-table tbody\")).map(tr => `\"${tr.cells[2].textContent.trim()}\": [${tr.cells[4].textContent.trim().split(/\\s+/).map(c => c === \"0\"? \"0\" : c === \"255\"? \"1\" : c + \" / 255\").join(\", \")}]`).join(\",\\n\"))\nexport default {\n\t\"aliceblue\": [240 / 255, 248 / 255, 1],\n\t\"antiquewhite\": [250 / 255, 235 / 255, 215 / 255],\n\t\"aqua\": [0, 1, 1],\n\t\"aquamarine\": [127 / 255, 1, 212 / 255],\n\t\"azure\": [240 / 255, 1, 1],\n\t\"beige\": [245 / 255, 245 / 255, 220 / 255],\n\t\"bisque\": [1, 228 / 255, 196 / 255],\n\t\"black\": [0, 0, 0],\n\t\"blanchedalmond\": [1, 235 / 255, 205 / 255],\n\t\"blue\": [0, 0, 1],\n\t\"blueviolet\": [138 / 255, 43 / 255, 226 / 255],\n\t\"brown\": [165 / 255, 42 / 255, 42 / 255],\n\t\"burlywood\": [222 / 255, 184 / 255, 135 / 255],\n\t\"cadetblue\": [95 / 255, 158 / 255, 160 / 255],\n\t\"chartreuse\": [127 / 255, 1, 0],\n\t\"chocolate\": [210 / 255, 105 / 255, 30 / 255],\n\t\"coral\": [1, 127 / 255, 80 / 255],\n\t\"cornflowerblue\": [100 / 255, 149 / 255, 237 / 255],\n\t\"cornsilk\": [1, 248 / 255, 220 / 255],\n\t\"crimson\": [220 / 255, 20 / 255, 60 / 255],\n\t\"cyan\": [0, 1, 1],\n\t\"darkblue\": [0, 0, 139 / 255],\n\t\"darkcyan\": [0, 139 / 255, 139 / 255],\n\t\"darkgoldenrod\": [184 / 255, 134 / 255, 11 / 255],\n\t\"darkgray\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkgreen\": [0, 100 / 255, 0],\n\t\"darkgrey\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkkhaki\": [189 / 255, 183 / 255, 107 / 255],\n\t\"darkmagenta\": [139 / 255, 0, 139 / 255],\n\t\"darkolivegreen\": [85 / 255, 107 / 255, 47 / 255],\n\t\"darkorange\": [1, 140 / 255, 0],\n\t\"darkorchid\": [153 / 255, 50 / 255, 204 / 255],\n\t\"darkred\": [139 / 255, 0, 0],\n\t\"darksalmon\": [233 / 255, 150 / 255, 122 / 255],\n\t\"darkseagreen\": [143 / 255, 188 / 255, 143 / 255],\n\t\"darkslateblue\": [72 / 255, 61 / 255, 139 / 255],\n\t\"darkslategray\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkslategrey\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkturquoise\": [0, 206 / 255, 209 / 255],\n\t\"darkviolet\": [148 / 255, 0, 211 / 255],\n\t\"deeppink\": [1, 20 / 255, 147 / 255],\n\t\"deepskyblue\": [0, 191 / 255, 1],\n\t\"dimgray\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dimgrey\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dodgerblue\": [30 / 255, 144 / 255, 1],\n\t\"firebrick\": [178 / 255, 34 / 255, 34 / 255],\n\t\"floralwhite\": [1, 250 / 255, 240 / 255],\n\t\"forestgreen\": [34 / 255, 139 / 255, 34 / 255],\n\t\"fuchsia\": [1, 0, 1],\n\t\"gainsboro\": [220 / 255, 220 / 255, 220 / 255],\n\t\"ghostwhite\": [248 / 255, 248 / 255, 1],\n\t\"gold\": [1, 215 / 255, 0],\n\t\"goldenrod\": [218 / 255, 165 / 255, 32 / 255],\n\t\"gray\": [128 / 255, 128 / 255, 128 / 255],\n\t\"green\": [0, 128 / 255, 0],\n\t\"greenyellow\": [173 / 255, 1, 47 / 255],\n\t\"grey\": [128 / 255, 128 / 255, 128 / 255],\n\t\"honeydew\": [240 / 255, 1, 240 / 255],\n\t\"hotpink\": [1, 105 / 255, 180 / 255],\n\t\"indianred\": [205 / 255, 92 / 255, 92 / 255],\n\t\"indigo\": [75 / 255, 0, 130 / 255],\n\t\"ivory\": [1, 1, 240 / 255],\n\t\"khaki\": [240 / 255, 230 / 255, 140 / 255],\n\t\"lavender\": [230 / 255, 230 / 255, 250 / 255],\n\t\"lavenderblush\": [1, 240 / 255, 245 / 255],\n\t\"lawngreen\": [124 / 255, 252 / 255, 0],\n\t\"lemonchiffon\": [1, 250 / 255, 205 / 255],\n\t\"lightblue\": [173 / 255, 216 / 255, 230 / 255],\n\t\"lightcoral\": [240 / 255, 128 / 255, 128 / 255],\n\t\"lightcyan\": [224 / 255, 1, 1],\n\t\"lightgoldenrodyellow\": [250 / 255, 250 / 255, 210 / 255],\n\t\"lightgray\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightgreen\": [144 / 255, 238 / 255, 144 / 255],\n\t\"lightgrey\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightpink\": [1, 182 / 255, 193 / 255],\n\t\"lightsalmon\": [1, 160 / 255, 122 / 255],\n\t\"lightseagreen\": [32 / 255, 178 / 255, 170 / 255],\n\t\"lightskyblue\": [135 / 255, 206 / 255, 250 / 255],\n\t\"lightslategray\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightslategrey\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightsteelblue\": [176 / 255, 196 / 255, 222 / 255],\n\t\"lightyellow\": [1, 1, 224 / 255],\n\t\"lime\": [0, 1, 0],\n\t\"limegreen\": [50 / 255, 205 / 255, 50 / 255],\n\t\"linen\": [250 / 255, 240 / 255, 230 / 255],\n\t\"magenta\": [1, 0, 1],\n\t\"maroon\": [128 / 255, 0, 0],\n\t\"mediumaquamarine\": [102 / 255, 205 / 255, 170 / 255],\n\t\"mediumblue\": [0, 0, 205 / 255],\n\t\"mediumorchid\": [186 / 255, 85 / 255, 211 / 255],\n\t\"mediumpurple\": [147 / 255, 112 / 255, 219 / 255],\n\t\"mediumseagreen\": [60 / 255, 179 / 255, 113 / 255],\n\t\"mediumslateblue\": [123 / 255, 104 / 255, 238 / 255],\n\t\"mediumspringgreen\": [0, 250 / 255, 154 / 255],\n\t\"mediumturquoise\": [72 / 255, 209 / 255, 204 / 255],\n\t\"mediumvioletred\": [199 / 255, 21 / 255, 133 / 255],\n\t\"midnightblue\": [25 / 255, 25 / 255, 112 / 255],\n\t\"mintcream\": [245 / 255, 1, 250 / 255],\n\t\"mistyrose\": [1, 228 / 255, 225 / 255],\n\t\"moccasin\": [1, 228 / 255, 181 / 255],\n\t\"navajowhite\": [1, 222 / 255, 173 / 255],\n\t\"navy\": [0, 0, 128 / 255],\n\t\"oldlace\": [253 / 255, 245 / 255, 230 / 255],\n\t\"olive\": [128 / 255, 128 / 255, 0],\n\t\"olivedrab\": [107 / 255, 142 / 255, 35 / 255],\n\t\"orange\": [1, 165 / 255, 0],\n\t\"orangered\": [1, 69 / 255, 0],\n\t\"orchid\": [218 / 255, 112 / 255, 214 / 255],\n\t\"palegoldenrod\": [238 / 255, 232 / 255, 170 / 255],\n\t\"palegreen\": [152 / 255, 251 / 255, 152 / 255],\n\t\"paleturquoise\": [175 / 255, 238 / 255, 238 / 255],\n\t\"palevioletred\": [219 / 255, 112 / 255, 147 / 255],\n\t\"papayawhip\": [1, 239 / 255, 213 / 255],\n\t\"peachpuff\": [1, 218 / 255, 185 / 255],\n\t\"peru\": [205 / 255, 133 / 255, 63 / 255],\n\t\"pink\": [1, 192 / 255, 203 / 255],\n\t\"plum\": [221 / 255, 160 / 255, 221 / 255],\n\t\"powderblue\": [176 / 255, 224 / 255, 230 / 255],\n\t\"purple\": [128 / 255, 0, 128 / 255],\n\t\"rebeccapurple\": [102 / 255, 51 / 255, 153 / 255],\n\t\"red\": [1, 0, 0],\n\t\"rosybrown\": [188 / 255, 143 / 255, 143 / 255],\n\t\"royalblue\": [65 / 255, 105 / 255, 225 / 255],\n\t\"saddlebrown\": [139 / 255, 69 / 255, 19 / 255],\n\t\"salmon\": [250 / 255, 128 / 255, 114 / 255],\n\t\"sandybrown\": [244 / 255, 164 / 255, 96 / 255],\n\t\"seagreen\": [46 / 255, 139 / 255, 87 / 255],\n\t\"seashell\": [1, 245 / 255, 238 / 255],\n\t\"sienna\": [160 / 255, 82 / 255, 45 / 255],\n\t\"silver\": [192 / 255, 192 / 255, 192 / 255],\n\t\"skyblue\": [135 / 255, 206 / 255, 235 / 255],\n\t\"slateblue\": [106 / 255, 90 / 255, 205 / 255],\n\t\"slategray\": [112 / 255, 128 / 255, 144 / 255],\n\t\"slategrey\": [112 / 255, 128 / 255, 144 / 255],\n\t\"snow\": [1, 250 / 255, 250 / 255],\n\t\"springgreen\": [0, 1, 127 / 255],\n\t\"steelblue\": [70 / 255, 130 / 255, 180 / 255],\n\t\"tan\": [210 / 255, 180 / 255, 140 / 255],\n\t\"teal\": [0, 128 / 255, 128 / 255],\n\t\"thistle\": [216 / 255, 191 / 255, 216 / 255],\n\t\"tomato\": [1, 99 / 255, 71 / 255],\n\t\"turquoise\": [64 / 255, 224 / 255, 208 / 255],\n\t\"violet\": [238 / 255, 130 / 255, 238 / 255],\n\t\"wheat\": [245 / 255, 222 / 255, 179 / 255],\n\t\"white\": [1, 1, 1],\n\t\"whitesmoke\": [245 / 255, 245 / 255, 245 / 255],\n\t\"yellow\": [1, 1, 0],\n\t\"yellowgreen\": [154 / 255, 205 / 255, 50 / 255]\n};\n","import RGBColorSpace from \"../rgbspace.js\";\nimport sRGBLinear from \"./srgb-linear.js\";\nimport KEYWORDS from \"../keywords.js\";\n\nlet coordGrammar = Array(3).fill(\"<percentage> | <number>[0, 255]\");\n\nexport default RGBColorSpace.create({\n\tid: \"srgb\",\n\tname: \"sRGB\",\n\tbase: sRGBLinear,\n\tfromBase: rgb => {\n\t\t// convert an array of linear-light sRGB values in the range 0.0-1.0\n\t\t// to gamma corrected form\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs > 0.0031308) {\n\t\t\t\treturn sign * (1.055 * (abs ** (1/2.4)) - 0.055);\n\t\t\t}\n\n\t\t\treturn 12.92 * val;\n\t\t});\n\t},\n\ttoBase: rgb => {\n\t\t// convert an array of sRGB values in the range 0.0 - 1.0\n\t\t// to linear light (un-companded) form.\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs < 0.04045) {\n\t\t\t\treturn val / 12.92;\n\t\t\t}\n\n\t\t\treturn sign * (((abs + 0.055) / 1.055) ** 2.4);\n\t\t});\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"rgb\": {\n\t\t\t\tcoords: coordGrammar,\n\t\t\t},\n\t\t\t\"color\": { /* use defaults */ },\n\t\t\t\"rgba\": {\n\t\t\t\tcoords: coordGrammar,\n\t\t\t\tcommas: true,\n\t\t\t\tlastAlpha: true,\n\t\t\t}\n\t\t},\n\t\tcustom: {\n\t\t\t\"hex\": {\n\t\t\t\ttoGamut: true,\n\t\t\t\ttest: str => /^#([a-f0-9]{3,4}){1,2}$/i.test(str),\n\t\t\t\tparse (str) {\n\t\t\t\t\tif (str.length <= 5) {\n\t\t\t\t\t\t// #rgb or #rgba, duplicate digits\n\t\t\t\t\t\tstr = str.replace(/[a-f0-9]/gi, \"$&$&\");\n\t\t\t\t\t}\n\n\t\t\t\t\tlet rgba = [];\n\t\t\t\t\tstr.replace(/[a-f0-9]{2}/gi, component => {\n\t\t\t\t\t\trgba.push(parseInt(component, 16) / 255);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tspaceId: \"srgb\",\n\t\t\t\t\t\tcoords: rgba.slice(0, 3),\n\t\t\t\t\t\talpha: rgba.slice(3)[0]\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tserialize: (coords, alpha, {\n\t\t\t\t\tcollapse = true // collapse to 3-4 digit hex when possible?\n\t\t\t\t} = {}) => {\n\t\t\t\t\tif (alpha < 1) {\n\t\t\t\t\t\tcoords.push(alpha);\n\t\t\t\t\t}\n\n\t\t\t\t\tcoords = coords.map(c => Math.round(c * 255));\n\n\t\t\t\t\tlet collapsible = collapse && coords.every(c => c % 17 === 0);\n\n\t\t\t\t\tlet hex = coords.map(c => {\n\t\t\t\t\t\tif (collapsible) {\n\t\t\t\t\t\t\treturn (c/17).toString(16);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn c.toString(16).padStart(2, \"0\");\n\t\t\t\t\t}).join(\"\");\n\n\t\t\t\t\treturn \"#\" + hex;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"keyword\": {\n\t\t\t\ttest: str => /^[a-z]+$/i.test(str),\n\t\t\t\tparse (str) {\n\t\t\t\t\tstr = str.toLowerCase();\n\t\t\t\t\tlet ret = {spaceId: \"srgb\", coords: null, alpha: 1};\n\n\t\t\t\t\tif (str === \"transparent\") {\n\t\t\t\t\t\tret.coords = KEYWORDS.black;\n\t\t\t\t\t\tret.alpha = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret.coords = KEYWORDS[str];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ret.coords) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO keyword\n\t\t},\n\t}\n});","import * as util from \"./util.js\";\nimport hooks from \"./hooks.js\";\nimport defaults from \"./defaults.js\";\nimport ColorSpace from \"./space.js\";\nimport {WHITES} from \"./adapt.js\";\nimport {\n\tgetColor,\n\tparse,\n\tto,\n\tserialize,\n\tinGamut,\n\ttoGamut,\n\tdistance,\n\tequals,\n\tget,\n\tgetAll,\n\tset,\n\tsetAll,\n} from \"./index-fn.js\";\n\nimport xyz_d65 from \"./spaces/xyz-d65.js\";\nimport \"./spaces/xyz-d50.js\";\nimport \"./spaces/srgb.js\";\n\n/**\n * Class that represents a color\n */\nexport default class Color {\n\t/**\n\t * Creates an instance of Color.\n\t * Signatures:\n\t * - `new Color(stringToParse)`\n\t * - `new Color(otherColor)`\n\t * - `new Color({space, coords, alpha})`\n\t * - `new Color(space, coords, alpha)`\n\t * - `new Color(spaceId, coords, alpha)`\n\t */\n\tconstructor (...args) {\n\t\tlet color;\n\n\t\tif (args.length === 1) {\n\t\t\tcolor = getColor(args[0]);\n\t\t}\n\n\t\tlet space, coords, alpha;\n\n\t\tif (color) {\n\t\t\tspace = color.space || color.spaceId;\n\t\t\tcoords = color.coords;\n\t\t\talpha = color.alpha;\n\t\t}\n\t\telse {\n\t\t\t// default signature new Color(ColorSpace, array [, alpha])\n\t\t\t[space, coords, alpha] = args;\n\t\t}\n\n\t\tthis.#space = ColorSpace.get(space);\n\t\tthis.coords = coords? coords.slice() : [0, 0, 0];\n\t\tthis.alpha = alpha < 1? alpha : 1; // this also deals with NaN etc\n\n\t\t// Convert \"NaN\" to NaN\n\t\tfor (let i = 0; i < this.coords.length; i++) {\n\t\t\tif (this.coords[i] === \"NaN\") {\n\t\t\t\tthis.coords[i] = NaN;\n\t\t\t}\n\t\t}\n\n\t\t// Define getters and setters for each coordinate\n\t\tfor (let id in this.#space.coords) {\n\t\t\tObject.defineProperty(this, id, {\n\t\t\t\tget: () => this.get(id),\n\t\t\t\tset: value => this.set(id, value)\n\t\t\t});\n\t\t}\n\t}\n\n\t#space\n\n\tget space() {\n\t\treturn this.#space;\n\t}\n\n\tget spaceId() {\n\t\treturn this.#space.id;\n\t}\n\n\tclone () {\n\t\treturn new Color(this.space, this.coords, this.alpha);\n\t}\n\n\ttoJSON () {\n\t\treturn {\n\t\t\tspaceId: this.spaceId,\n\t\t\tcoords: this.coords,\n\t\t\talpha: this.alpha\n\t\t};\n\t}\n\n\ttoString (...args) {\n\t\tlet ret = serialize(this, ...args);\n\n\t\tif (ret.color) {\n\t\t\t// Convert color object to Color instance\n\t\t\tret.color = new Color(ret.color);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get a color from the argument passed\n\t * Basically gets us the same result as new Color(color) but doesn't clone an existing color object\n\t */\n\tstatic get (color, ...args) {\n\t\tif (color instanceof Color) {\n\t\t\treturn color;\n\t\t}\n\n\t\treturn new Color(color, ...args);\n\t}\n\n\tstatic defineFunction (name, code, {instance = true, returns} = {}) {\n\t\tlet func = function (...args) {\n\t\t\tlet ret = code(...args);\n\n\t\t\tif (returns === \"color\") {\n\t\t\t\tret = Color.get(ret);\n\t\t\t}\n\t\t\telse if (returns === \"function<color>\") {\n\t\t\t\tlet f = ret;\n\t\t\t\tret = function(...args) {\n\t\t\t\t\tlet ret = f(...args);\n\t\t\t\t\treturn Color.get(ret);\n\t\t\t\t}\n\t\t\t\t// Copy any function metadata\n\t\t\t\tObject.assign(ret, f);\n\t\t\t}\n\t\t\telse if (returns === \"array<color>\") {\n\t\t\t\tret = ret.map(c => Color.get(c));\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (!(name in Color)) {\n\t\t\tColor[name] = func;\n\t\t}\n\n\t\tif (instance) {\n\t\t\tColor.prototype[name] = function (...args) {\n\t\t\t\treturn func(this, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic defineFunctions(o) {\n\t\tfor (let name in o) {\n\t\t\tColor.defineFunction(name, o[name], o[name]);\n\t\t}\n\t}\n\n\tstatic extend (exports) {\n\t\tif (exports.register) {\n\t\t\texports.register(Color);\n\t\t}\n\t\telse {\n\t\t\t// No register method, just add the module's functions\n\t\t\tfor (let name in exports) {\n\t\t\t\tColor.defineFunction(name, exports[name], exports[name]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nColor.defineFunctions({\n\tget,\n\tgetAll,\n\tset,\n\tsetAll,\n\tto,\n\tequals,\n\tinGamut,\n\ttoGamut,\n\tdistance,\n});\n\nObject.assign(Color, {\n\tutil,\n\thooks,\n\tWHITES,\n\tSpace: ColorSpace,\n\tspaces: ColorSpace.registry,\n\tparse,\n\n\t// Global defaults one may want to configure\n\tdefaults\n});\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n\t// Find widest supported color space for CSS\n\tfor (let spaceId of [\"lab\", \"rec2020\", \"p3\", \"srgb\"]) {\n\t\tif (spaceId in ColorSpace.registry) {\n\t\t\tlet coords = ColorSpace.registry[spaceId].getMinCoords();\n\t\t\tlet color = new Color(spaceId, coords);\n\n\t\t\tif (CSS.supports(\"color\", color)) {\n\t\t\t\tdefaults.css_space = spaceId;\n\t\t\t}\n\t\t}\n\t}\n}\n","import ColorSpace from \"../space.js\";\nimport sRGB from \"./srgb.js\";\n\nexport default ColorSpace.create({\n\tid: \"hsl\",\n\tname: \"HSL\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\"\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\"\n\t\t}\n\t},\n\n\tbase: sRGB,\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB\n\tfromBase: rgb => {\n\t\tlet max = Math.max(...rgb);\n\t\tlet min = Math.min(...rgb);\n\t\tlet [r, g, b] = rgb;\n\t\tlet [h, s, l] = [NaN, 0, (min + max)/2];\n\t\tlet d = max - min;\n\n\t\tif (d !== 0) {\n\t\t\ts = (l === 0 || l === 1) ? 0 : (max - l) / Math.min(l, 1 - l);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4;\n\t\t\t}\n\n\t\t\th = h * 60;\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t},\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n\ttoBase: hsl => {\n\t\tlet [h, s, l] = hsl;\n\t\th = h % 360;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tfunction f(n) {\n\t\t\tlet k = (n + h/30) % 12;\n\t\t\tlet a = s * Math.min(l, 1 - l);\n\t\t\treturn l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n\t\t}\n\n\t\treturn [f(0), f(8), f(4)];\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"hsl\": {\n\t\t\t\ttoGamut: true,\n\t\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t\t},\n\t\t\t\"hsla\": {\n\t\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t\t\tcommas: true,\n\t\t\t\tlastAlpha: true,\n\t\t\t}\n\t\t}\n\t},\n});","import ColorSpace from \"../space.js\";\nimport HSL from \"./hsl.js\";\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nexport default ColorSpace.create({\n\tid: \"hsv\",\n\tname: \"HSV\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\"\n\t\t},\n\t\tv: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Value\"\n\t\t}\n\t},\n\n\tbase: HSL,\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\tfromBase (hsl) {\n\t\tlet [h, s, l] = hsl;\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tlet v = l + s * Math.min(l, 1 - l);\n\n\t\treturn [\n\t\t\th, // h is the same\n\t\t\tv === 0? 0 : 200 * (1 - l / v), // s\n\t\t\t100 * v\n\t\t];\n\t},\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\ttoBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\ts /= 100;\n\t\tv /= 100;\n\n\t\tlet l = v * (1 - s/2);\n\n\t\treturn [\n\t\t\th, // h is the same\n\t\t\t(l === 0 || l === 1)? 0 : ((v - l) / Math.min(l, 1 - l)) * 100,\n\t\t\tl * 100\n\t\t];\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {\n\t\t\t\ttoGamut: true,\n\t\t\t}\n\t\t}\n\t}\n});\n","import ColorSpace from \"../space.js\";\nimport HSV from \"./hsv.js\";\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nexport default ColorSpace.create({\n\tid: \"hwb\",\n\tname: \"HWB\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\tw: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Whiteness\"\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Blackness\"\n\t\t}\n\t},\n\n\tbase: HSV,\n\tfromBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\treturn [h, v * (100 - s) / 100, 100 - v];\n\t},\n\ttoBase (hwb) {\n\t\tlet [h, w, b] = hwb;\n\n\t\t// Now convert percentages to [0..1]\n\t\tw /= 100;\n\t\tb /= 100;\n\n\t\t// Achromatic check (white plus black >= 1)\n\t\tlet sum = w + b;\n\t\tif (sum >= 1) {\n\t\t\t let gray = w / sum;\n\t\t\t return [h, 0, gray * 100];\n\t\t}\n\n\t\tlet v = (1 - b);\n\t\tlet s = (v === 0) ? 0 : 1 - w / v;\n\t\treturn [h, s * 100, v * 100];\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"hwb\": {\n\t\t\t\ttoGamut: true,\n\t\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t\t}\n\t\t}\n\t}\n});\n","import RGBColorSpace from \"../rgbspace.js\";\n\nconst toXYZ_M = [\n\t[0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\n\t[0.2289745640697488, 0.6917385218365064,  0.079286914093745],\n\t[0.0000000000000000, 0.04511338185890264, 1.043944368900976]\n];\n\nconst fromXYZ_M = [\n\t[ 2.493496911941425,   -0.9313836179191239, -0.40271078445071684],\n\t[-0.8294889695615747,   1.7626640603183463,  0.023624685841943577],\n\t[ 0.03584583024378447, -0.07617238926804182, 0.9568845240076872]\n]\n\nexport default RGBColorSpace.create({\n\tid: \"p3-linear\",\n\tname: \"Linear P3\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M\n});","import RGBColorSpace from \"../rgbspace.js\";\nimport P3Linear from \"./p3-linear.js\";\nimport sRGB from \"./srgb.js\";\n\nexport default RGBColorSpace.create({\n\tid: \"p3\",\n\tname: \"P3\",\n\tbase: P3Linear,\n\t// Gamma encoding/decoding is the same as sRGB\n\tfromBase: sRGB.fromBase,\n\ttoBase: sRGB.toBase,\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {\n\t\t\t\tid: \"display-p3\",\n\t\t\t}\n\t\t}\n\t},\n});\n","import RGBColorSpace from \"../rgbspace.js\";\n\n// convert an array of linear-light a98-rgb values to CIE XYZ\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// has greater numerical precision than section 4.3.5.3 of\n// https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n// but the values below were calculated from first principles\n// from the chromaticity coordinates of R G B W\nconst toXYZ_M = [\n\t[ 0.5766690429101305,   0.1855582379065463,   0.1882286462349947  ],\n\t[ 0.29734497525053605,  0.6273635662554661,   0.07529145849399788 ],\n\t[ 0.02703136138641234,  0.07068885253582723,  0.9913375368376388  ]\n];\n\nconst fromXYZ_M = [\n\t[  2.0415879038107465,    -0.5650069742788596,   -0.34473135077832956 ],\n\t[ -0.9692436362808795,     1.8759675015077202,    0.04155505740717557 ],\n\t[  0.013444280632031142,  -0.11836239223101838,   1.0151749943912054  ]\n]\n\nexport default RGBColorSpace.create({\n\tid: \"a98rgb-linear\",\n\tname: \"Linear AdobeÂ® 98 RGB compatible\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M\n});","import RGBColorSpace from \"../rgbspace.js\";\nimport A98Linear from \"./a98rgb-linear.js\";\n\nexport default RGBColorSpace.create({\n\tid: \"a98rgb\",\n\tname: \"AdobeÂ® 98 RGB compatible\",\n\tbase: A98Linear,\n\ttoBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 563 / 256) * Math.sign(val)),\n\tfromBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 256 / 563) * Math.sign(val)),\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {\n\t\t\t\tid: \"a98-rgb\"\n\t\t\t}\n\t\t}\n\t},\n});\n","import RGBColorSpace from \"../rgbspace.js\";\n\n// convert an array of  prophoto-rgb values to CIE XYZ\n// using  D50 (so no chromatic adaptation needed afterwards)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\nconst toXYZ_M = [\n\t[ 0.7977604896723027,  0.13518583717574031,  0.0313493495815248     ],\n\t[ 0.2880711282292934,  0.7118432178101014,   0.00008565396060525902 ],\n\t[ 0.0,                 0.0,                  0.8251046025104601     ]\n];\n\nconst fromXYZ_M = [\n\t[  1.3457989731028281,  -0.25558010007997534,  -0.05110628506753401 ],\n\t[ -0.5446224939028347,   1.5082327413132781,    0.02053603239147973 ],\n\t[  0.0,                  0.0,                   1.2119675456389454  ]\n]\n\nexport default RGBColorSpace.create({\n\tid: \"prophoto-linear\",\n\tname: \"Linear ProPhoto\",\n\twhite: \"D50\",\n\tbase: \"xyz-d50\",\n\ttoXYZ_M,\n\tfromXYZ_M\n});","import RGBColorSpace from \"../rgbspace.js\";\nimport ProPhotoLinear from \"./prophoto-linear.js\";\n\nconst Et = 1/512;\nconst Et2 = 16/512;\n\nexport default RGBColorSpace.create({\n\tid: \"prophoto\",\n\tname: \"ProPhoto\",\n\tbase: ProPhotoLinear,\n\ttoBase(RGB) {\n\t\t// Transfer curve is gamma 1.8 with a small linear portion\n\t\treturn RGB.map(v => v < Et2? v / 16 : v ** 1.8);\n\t},\n\tfromBase(RGB) {\n\t\treturn RGB.map(v => v >= Et? v ** (1/1.8) : 16 * v);\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {\n\t\t\t\tid: \"prophoto-rgb\"\n\t\t\t}\n\t\t}\n\t},\n});\n","import RGBColorSpace from \"../rgbspace.js\";\n\n// convert an array of linear-light rec2020 values to CIE XYZ\n// using  D65 (no chromatic adaptation)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// 0 is actually calculated as  4.994106574466076e-17\nconst toXYZ_M = [\n\t[ 0.6369580483012914, 0.14461690358620832,  0.1688809751641721  ],\n\t[ 0.2627002120112671, 0.6779980715188708,   0.05930171646986196 ],\n\t[ 0.000000000000000,  0.028072693049087428, 1.060985057710791   ]\n];\n\n// from ITU-R BT.2124-0 Annex 2 p.3\nconst fromXYZ_M = [\n\t[  1.716651187971268,  -0.355670783776392, -0.253366281373660  ],\n\t[ -0.666684351832489,   1.616481236634939,  0.0157685458139111 ],\n\t[  0.017639857445311,  -0.042770613257809,  0.942103121235474  ]\n]\n\nexport default RGBColorSpace.create({\n\tid: \"rec2020-linear\",\n\tname: \"Linear REC.2020\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M\n});","import RGBColorSpace from \"../rgbspace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n// import sRGB from \"./srgb.js\";\n\nconst Î± = 1.09929682680944;\nconst Î² = 0.018053968510807;\n\nexport default RGBColorSpace.create({\n\tid: \"rec2020\",\n\tname: \"REC.2020\",\n\tbase: REC2020Linear,\n\t// Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\n\ttoBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val < Î² * 4.5 ) {\n\t\t\t\treturn val / 4.5;\n\t\t\t}\n\n\t\t\treturn Math.pow((val + Î± -1 ) / Î±, 1/0.45);\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val >= Î² ) {\n\t\t\t\treturn Î± * Math.pow(val, 0.45) - (Î± - 1);\n\t\t\t}\n\n\t\t\treturn 4.5 * val;\n\t\t});\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t}\n});","import ColorSpace from \"../space.js\";\nimport OKLab from \"./oklab.js\";\nimport {constrain as constrainAngle} from \"../angles.js\";\n\nexport default ColorSpace.create({\n\tid: \"oklch\",\n\tname: \"OKLCh\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\"\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 0.4],\n\t\t\tname: \"Chroma\"\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t}\n\t},\n\twhite: \"D65\",\n\n\tbase: OKLab,\n\tfromBase (oklab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = oklab;\n\t\tlet h;\n\t\tconst Îµ = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(a) < Îµ && Math.abs(b) < Îµ) {\n\t\t\th = NaN;\n\t\t}\n\t\telse {\n\t\t\th = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // OKLab L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrainAngle(h) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\t// Convert from polar form\n\ttoBase (oklch) {\n\t\tlet [L, C, h] = oklch;\n\t\tlet a, b;\n\n\t\t// check for NaN hue\n\t\tif (isNaN(h)) {\n\t\t\ta = 0;\n\t\t\tb = 0;\n\t\t}\n\t\telse {\n\t\t\ta = C * Math.cos(h * Math.PI / 180);\n\t\t\tb = C * Math.sin(h * Math.PI / 180);\n\t\t}\n\n\t\treturn [ L, a, b ];\n\t},\n\n\tformats: {\n\t\tfunctions: {\n\t\t\t\"oklch\": {\n\t\t\t\tcoords: [\"<percentage>\", \"<number>\", \"<number> | <angle>\"],\n\t\t\t}\n\t\t}\n\t}\n});\n\n","import RGBColorSpace from \"../rgbspace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n\nconst Yw = 203;\t// absolute luminance of media white, cd/mÂ²\nconst n = 2610 / (2 ** 14);\nconst ninv = (2 ** 14) / 2610;\nconst m = 2523 / (2 ** 5);\nconst minv = (2 ** 5) / 2523;\nconst c1 = 3424 / (2 ** 12);\nconst c2 = 2413 / (2 ** 7);\nconst c3 = 2392 / (2 ** 7);\n\nexport default RGBColorSpace.create({\n\tid: \"rec2100pq\",\n\tname: \"REC.2100-PQ\",\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given PQ encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = ((Math.max(((val ** minv) - c1), 0) / (c2 - (c3 * (val ** minv)))) ** ninv);\n\t\t\treturn (x * 10000 / Yw); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// returnPQ encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = Math.max(val * Yw / 10000, 0); \t// absolute luminance of peak white is 10,000 cd/mÂ².\n\t\t\tlet num = (c1 + (c2 * (x ** n)));\n\t\t\tlet denom = (1 + (c3 * (x ** n)));\n\n\t\t\treturn ((num / denom)  ** m);\n\t\t});\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {\n\t\t\t\tid: \"rec2100-pq\"\n\t\t\t}\n\t\t}\n\t},\n});\n","import RGBColorSpace from \"../rgbspace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n\nconst a = 0.17883277;\nconst b = 0.28466892; // 1 - (4 * a)\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\n\nexport default RGBColorSpace.create({\n\tid: \"rec2100hlg\",\n\tcssid: \"rec2100-hlg\",\n\tname: \"REC.2100-HLG\",\n\treferred: \"scene\",\n\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given HLG encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 1/12) {\n\t\t\t\treturn Math.sqrt( 3 * val);\n\t\t\t}\n\t\t\treturn a * Math.log(12 * val - b) + c;\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// return HLG encoded component in range [0, 1]\n\t\t// per ITU Rec BT.2390\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 0.5) {\n\t\t\t\treturn (val ** 2) / 3;\n\t\t\t}\n\t\t\treturn Math.exp(((val - c) / a) + b) / 12;\n\t\t});\n\t},\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {\n\t\t\t\tid: \"rec2100-hlg\"\n\t\t\t}\n\t\t}\n\t},\n});\n","import hooks from \"./hooks.js\";\nimport {multiplyMatrices} from \"./util.js\";\nimport {WHITES} from \"./adapt.js\";\n\nexport const CATs = {};\n\nhooks.add(\"chromatic-adaptation-start\", env => {\n\tif (env.options.method) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nhooks.add(\"chromatic-adaptation-end\", env => {\n\tif (!env.M) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nexport function defineCAT ({id, toCone_M, fromCone_M}) {\n\t// Use id, toCone_M, fromCone_M like variables\n\tCATs[id] = arguments[0];\n};\n\nexport function adapt (W1, W2, id = \"Bradford\") {\n\t// adapt from a source whitepoint or illuminant W1\n\t// to a destination whitepoint or illuminant W2,\n\t// using the given chromatic adaptation transform (CAT)\n\t// debugger;\n\tlet method = CATs[id];\n\n\tlet [Ïs, Î³s, Î²s] = multiplyMatrices(method.toCone_M, W1);\n\tlet [Ïd, Î³d, Î²d] = multiplyMatrices(method.toCone_M, W2);\n\n\t// all practical illuminants have non-zero XYZ so no division by zero can occur below\n\tlet scale = [\n\t\t[Ïd/Ïs,    0,      0      ],\n\t\t[0,        Î³d/Î³s,  0      ],\n\t\t[0,        0,      Î²d/Î²s  ]\n\t];\n\t// console.log({scale});\n\n\tlet scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\n\tlet adapt_M\t= multiplyMatrices(method.fromCone_M, scaled_cone_M);\n\t// console.log({scaled_cone_M, adapt_M});\n\treturn adapt_M;\n};\n\ndefineCAT({\n\tid: \"von Kries\",\n\ttoCone_M: [\n\t\t[  0.4002400,  0.7076000, -0.0808100 ],\n\t\t[ -0.2263000,  1.1653200,  0.0457000 ],\n\t\t[  0.0000000,  0.0000000,  0.9182200 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.8599364, -1.1293816,  0.2198974 ],\n\t\t[  0.3611914,  0.6388125, -0.0000064 ],\n\t\t[  0.0000000,  0.0000000,  1.0890636 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"Bradford\",\n\t// Convert an array of XYZ values in the range 0.0 - 1.0\n\t// to cone fundamentals\n\ttoCone_M: [\n\t\t[  0.8951000,  0.2664000, -0.1614000 ],\n\t\t[ -0.7502000,  1.7135000,  0.0367000 ],\n\t\t[  0.0389000, -0.0685000,  1.0296000 ]\n\t],\n\t// and back\n\tfromCone_M: [\n\t\t[  0.9869929, -0.1470543,  0.1599627 ],\n\t\t[  0.4323053,  0.5183603,  0.0492912 ],\n\t\t[ -0.0085287,  0.0400428,  0.9684867 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"CAT02\",\n\t// with complete chromatic adaptation to W2, so D = 1.0\n\ttoCone_M: [\n\t\t[  0.7328000,  0.4296000, -0.1624000 ],\n\t\t[ -0.7036000,  1.6975000,  0.0061000 ],\n\t\t[  0.0030000,  0.0136000,  0.9834000 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.0961238, -0.2788690,  0.1827452 ],\n\t\t[  0.4543690,  0.4735332,  0.0720978 ],\n\t\t[ -0.0096276, -0.0056980,  1.0153256 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"CAT16\",\n\ttoCone_M: [\n\t\t[  0.401288,  0.650173, -0.051461 ],\n\t\t[ -0.250268,  1.204414,  0.045854 ],\n\t\t[ -0.002079,  0.048952,  0.953127 ]\n\t],\n\t// the extra precision is needed to avoid roundtripping errors\n\tfromCone_M: [\n\t\t[  1.862067855087233e+0, -1.011254630531685e+0,   1.491867754444518e-1 ],\n\t\t[  3.875265432361372e-1,  6.214474419314753e-1,  -8.973985167612518e-3 ],\n\t\t[ -1.584149884933386e-2, -3.412293802851557e-2,   1.049964436877850e+0 ]\n\t]\n});\n\nObject.assign(WHITES, {\n\t// whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n\t// all normalized to Y (luminance) = 1.00000\n\t// Illuminant A is a tungsten electric light, giving a very warm, orange light.\n\tA:  [1.09850, 1.00000, 0.35585],\n\n\t// Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n\tC:   [0.98074, 1.000000, 1.18232],\n\n\t// The daylight series of illuminants simulate natural daylight.\n\t// The color temperature (in degrees Kelvin/100) ranges from\n\t// cool, overcast daylight (D50) to bright, direct sunlight (D65).\n\tD55: [0.95682, 1.00000, 0.92149],\n\tD75: [0.94972, 1.00000, 1.22638],\n\n\t// Equal-energy illuminant, used in two-stage CAT16\n\tE:   [1.00000, 1.00000, 1.00000],\n\n\t// The F series of illuminants represent flourescent lights\n\tF2:  [0.99186, 1.00000, 0.67393],\n\tF7:  [0.95041, 1.00000, 1.08747],\n\tF11: [1.00962, 1.00000, 0.64350],\n});\n","import RGBColorSpace from \"../rgbspace.js\";\nimport {WHITES} from \"../adapt.js\";\nimport \"../CATs.js\"; // because of the funky whitepoint\n\n// The ACES whitepoint\n// see TB-2018-001 Derivation of the ACES White Point CIE Chromaticity Coordinates\n// also https://github.com/ampas/aces-dev/blob/master/documents/python/TB-2018-001/aces_wp.py\n// Similar to D60\nWHITES.ACES = [0.32168/0.33767, 1.00000, (1.00000 - 0.32168 - 0.33767)/0.33767];\n\n// convert an array of linear-light ACEScc values to CIE XYZ\nconst toXYZ_M = [\n\t[  0.6624541811085053,   0.13400420645643313,  0.1561876870049078  ],\n\t[  0.27222871678091454,  0.6740817658111484,   0.05368951740793705 ],\n\t[ -0.005574649490394108, 0.004060733528982826, 1.0103391003129971  ]\n];\nconst fromXYZ_M = [\n\t[  1.6410233796943257,   -0.32480329418479,    -0.23642469523761225  ],\n\t[ -0.6636628587229829,    1.6153315916573379,   0.016756347685530137 ],\n\t[  0.011721894328375376, -0.008284441996237409, 0.9883948585390215   ]\n];\n\nexport default RGBColorSpace.create({\n\tid: \"acescg\",\n\tname: \"ACEScg\",\n\n\t// ACEScg â A scene-referred, linear-light encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescg/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\tcoords: {\n\t\tr: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Red\"\n\t\t},\n\t\tg: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Green\"\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Blue\"\n\t\t}\n\t},\n\n\treferred: \"scene\",\n\n\twhite: WHITES.ACES,\n\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n\n// export default Color;\n","import RGBColorSpace from \"../rgbspace.js\";\nimport \"../CATs.js\"; // because of the funky whitepoint\nimport ACEScg from \"./acescg.js\";\n\nconst Îµ = 2 ** -16;\n\n// the smallest value which, in the 32bit IEEE 754 float encoding,\n// decodes as a non-negative value\nconst ACES_min_nonzero = -0.35828683;\n\n// brightest encoded value, decodes to 65504\nconst ACES_cc_max = (Math.log2(65504) + 9.72) / 17.52; // 1.468\n\nexport default RGBColorSpace.create({\n\tid: \"acescc\",\n\tname: \"ACEScc\",\n\t// see S-2014-003 ACEScc â A Logarithmic Encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescc/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\n\t// Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\n\t// below 18% middle gray are encoded as negative ACEScc values.\n\t// These values should be preserved per the encoding in Section 4.4\n\t// so that all positive ACES values are maintained.\"\n\tcoords: {\n\t\tr: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Red\"\n\t\t},\n\t\tg: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Green\"\n\t\t},\n\t\tb: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Blue\"\n\t\t}\n\t},\n\treferred: \"scene\",\n\n\tbase: ACEScg,\n\t// from section 4.4.2 Decoding Function\n\ttoBase (RGB) {\n\t\tconst low = (9.72 - 15) / 17.52; // -0.3014\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= low) {\n\t\t\t\treturn (2 ** ((val * 17.52) - 9.72) - Îµ) * 2; // very low values, below -0.3014\n\t\t\t}\n\t\t\telse if (val < ACES_cc_max) {\n\t\t\t\treturn 2 ** ((val * 17.52) - 9.72);\n\t\t\t}\n\t\t\telse { // val >= ACES_cc_max\n\t\t\t\treturn 65504;\n\t\t\t}\n\t\t});\n\t},\n\n\t// Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 0) {\n\t\t\t\treturn (Math.log2(Îµ) + 9.72) / 17.52; // -0.3584\n\t\t\t}\n\t\t\telse if (val < Îµ) {\n\t\t\t\treturn  (Math.log2(Îµ + val * 0.5) + 9.72) / 17.52;\n\t\t\t}\n\t\t\telse { // val >= Îµ\n\t\t\t\treturn  (Math.log2(val) + 9.72) / 17.52;\n\t\t\t}\n\t\t});\n\t},\n\t// encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\n\t// encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\n\tformats: {\n\t\tfunctions: {\n\t\t\tcolor: {}\n\t\t}\n\t},\n});\n","/**\n * This plugin defines getters and setters for color[spaceId]\n * e.g. color.lch on *any* color gives us the lch coords\n */\nimport ColorSpace from \"./space.js\";\nimport Color from \"./color.js\";\nimport hooks from \"./hooks.js\";\n\n// Add space accessors to existing color spaces\nfor (let id in ColorSpace.registry) {\n\taddSpaceAccessors(id, ColorSpace.registry[id]);\n}\n\n// Add space accessors to color spaces not yet created\nhooks.add(\"colorspace-init-end\", addSpaceAccessors);\n\nfunction addSpaceAccessors (id, space) {\n\t// Coordinates can be looked up by both id and name\n\tlet coordIds = Object.keys(space.coords);\n\tlet coordNames = Object.values(space.coords).map(c => c.name);\n\n\n\tlet propId = id.replace(/-/g, \"_\");\n\n\tObject.defineProperty(Color.prototype, propId, {\n\t\t// Convert coords to coords in another colorspace and return them\n\t\t// Source colorspace: this.spaceId\n\t\t// Target colorspace: id\n\t\tget () {\n\t\t\tlet ret = this.getAll(id);\n\n\t\t\tif (typeof Proxy === \"undefined\") {\n\t\t\t\t// If proxies are not supported, just return a static array\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Enable color.spaceId.coordName syntax\n\t\t\treturn new Proxy(ret, {\n\t\t\t\thas: (obj, property) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tColorSpace.resolveCoord([space, property]);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch(e) {}\n\n\t\t\t\t\treturn Reflect.has(obj, property);\n\t\t\t\t},\n\t\t\t\tget: (obj, property, receiver) => {\n\t\t\t\t\tif (property && typeof property !== \"symbol\" && !(property in obj)) {\n\t\t\t\t\t\tlet {index} = ColorSpace.resolveCoord([space, property]);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\treturn obj[index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.get(obj, property, receiver);\n\t\t\t\t},\n\t\t\t\tset: (obj, property, value, receiver) => {\n\t\t\t\t\tif (property && typeof property !== \"symbol\" && !(property in obj) || property >= 0) {\n\t\t\t\t\t\tlet {index} = ColorSpace.resolveCoord([space, property]);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tobj[index] = value;\n\n\t\t\t\t\t\t\t// Update color.coords\n\t\t\t\t\t\t\tthis.setAll(id, obj);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.set(obj, property, value, receiver);\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\t// Convert coords in another colorspace to internal coords and set them\n\t\t// Target colorspace: this.spaceId\n\t\t// Source colorspace: id\n\t\tset (coords) {\n\t\t\tthis.setAll(id, coords);\n\t\t},\n\t\tconfigurable: true,\n\t\tenumerable: true\n\t});\n}","// Import all modules of Color.js\nimport Color from \"./color.js\";\n\n// Import all color spaces\nimport \"./spaces/index.js\";\n\n// Import all DeltaE methods\nimport * as deltaE from \"./deltaE.js\";\nimport * as deltaEMethods from \"./deltaE/index.js\";\nfor (let method in deltaEMethods) {\n\tlet id = method.replace(/^deltaE/, \"\");\n\tdeltaE.registerMethod(id, deltaEMethods[method]);\n}\nColor.extend(deltaE);\n\n// Import optional modules\nimport * as variations from \"./variations.js\";\nColor.extend(variations);\n\nimport * as contrast from \"./contrast.js\";\nColor.extend(contrast);\n\nimport * as chromaticity from \"./chromaticity.js\";\nColor.extend(chromaticity);\n\nimport * as luminance from \"./luminance.js\";\nColor.extend(luminance);\n\nimport * as interpolation from \"./interpolation.js\";\nColor.extend(interpolation);\n\nimport \"./CATs.js\";\nimport \"./space-accessors.js\";\n\n// Re-export everything\nexport default Color;\n"],"names":["adapt","Îµ","util.parseFunction","util.last","util.mapRange","set","XYZ_D65","Lab","constrainAngle","Ï","d2r","util.isString","inGamut","checkInGamut","util.toPrecision","register","xyz_d65","Yw","b","n","ninv","c1","c2","c3","XYZtoLMS_M","LMStoXYZ_M","oklab","angles.adjust","toXYZ_M","fromXYZ_M","deltaE.registerMethod","deltaE","contrast"],"mappings":"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"}